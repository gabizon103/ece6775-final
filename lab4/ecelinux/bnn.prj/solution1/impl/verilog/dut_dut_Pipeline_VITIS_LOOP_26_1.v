// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_dut_Pipeline_VITIS_LOOP_26_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_dout,
        strm_in_empty_n,
        strm_in_read,
        input_0_address0,
        input_0_ce0,
        input_0_we0,
        input_0_d0,
        input_0_address1,
        input_0_ce1,
        input_0_we1,
        input_0_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_dout;
input   strm_in_empty_n;
output   strm_in_read;
output  [7:0] input_0_address0;
output   input_0_ce0;
output   input_0_we0;
output  [0:0] input_0_d0;
output  [7:0] input_0_address1;
output   input_0_ce1;
output   input_0_we1;
output  [0:0] input_0_d1;

reg ap_idle;
reg strm_in_read;
reg[7:0] input_0_address0;
reg input_0_ce0;
reg input_0_we0;
reg[0:0] input_0_d0;
reg[7:0] input_0_address1;
reg input_0_ce1;
reg input_0_we1;
reg[0:0] input_0_d1;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln26_fu_432_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
reg    strm_in_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln26_reg_1725;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] empty_21_fu_452_p1;
reg   [7:0] empty_21_reg_1729;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] trunc_ln714_fu_456_p1;
reg   [0:0] trunc_ln714_reg_1736;
wire   [3:0] div_udiv_fu_460_p4;
reg   [3:0] div_udiv_reg_1741;
wire   [7:0] tmp_s_fu_470_p3;
reg   [7:0] tmp_s_reg_1746;
reg   [0:0] tmp_3_reg_1754;
reg   [0:0] tmp_4_reg_1759;
reg   [0:0] tmp_6_reg_1764;
reg   [0:0] tmp_8_reg_1769;
reg   [0:0] tmp_10_reg_1774;
reg   [0:0] tmp_11_reg_1779;
reg   [0:0] tmp_13_reg_1784;
reg   [0:0] tmp_15_reg_1789;
reg   [0:0] tmp_17_reg_1794;
reg   [0:0] tmp_19_reg_1799;
reg   [0:0] tmp_21_reg_1804;
reg   [0:0] tmp_23_reg_1809;
reg   [0:0] tmp_25_reg_1814;
reg   [0:0] tmp_26_reg_1819;
reg   [0:0] tmp_28_reg_1824;
reg   [0:0] tmp_30_reg_1829;
reg   [0:0] tmp_32_reg_1834;
reg   [0:0] tmp_34_reg_1839;
reg   [0:0] tmp_36_reg_1844;
reg   [0:0] tmp_38_reg_1849;
reg   [0:0] tmp_40_reg_1854;
reg   [0:0] tmp_42_reg_1859;
reg   [0:0] tmp_44_reg_1864;
reg   [0:0] tmp_46_reg_1869;
reg   [0:0] tmp_48_reg_1874;
reg   [0:0] tmp_50_reg_1879;
reg   [0:0] tmp_52_reg_1884;
reg   [0:0] tmp_54_reg_1889;
reg   [0:0] tmp_56_reg_1894;
wire   [7:0] or_ln30_1_fu_801_p2;
reg   [7:0] or_ln30_1_reg_1899;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] or_ln30_2_fu_919_p2;
reg   [7:0] or_ln30_2_reg_1905;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [7:0] or_ln30_3_fu_1177_p2;
reg   [7:0] or_ln30_3_reg_1915;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [3:0] div_udiv_25_reg_1932;
wire    ap_block_pp0_stage15_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln29_2_fu_484_p1;
wire   [63:0] zext_ln29_6_fu_543_p1;
wire   [63:0] zext_ln29_3_fu_796_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln29_7_fu_836_p1;
wire   [63:0] zext_ln29_8_fu_870_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln29_9_fu_904_p1;
wire   [63:0] zext_ln29_4_fu_914_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln29_10_fu_954_p1;
wire   [63:0] zext_ln29_11_fu_988_p1;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln29_12_fu_1022_p1;
wire   [63:0] zext_ln29_13_fu_1056_p1;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln29_14_fu_1090_p1;
wire   [63:0] zext_ln29_15_fu_1124_p1;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln29_16_fu_1158_p1;
wire   [63:0] zext_ln29_fu_1163_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln29_5_fu_1172_p1;
wire   [63:0] zext_ln29_1_fu_1206_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln29_17_fu_1241_p1;
wire   [63:0] zext_ln29_18_fu_1275_p1;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln29_19_fu_1309_p1;
wire   [63:0] zext_ln29_20_fu_1343_p1;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln29_21_fu_1377_p1;
wire   [63:0] zext_ln29_22_fu_1411_p1;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln29_23_fu_1445_p1;
wire   [63:0] zext_ln29_24_fu_1479_p1;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln29_25_fu_1513_p1;
wire   [63:0] zext_ln29_26_fu_1547_p1;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln29_27_fu_1581_p1;
wire   [63:0] zext_ln29_28_fu_1615_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln29_29_fu_1649_p1;
wire   [63:0] zext_ln29_30_fu_1682_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln29_31_fu_1706_p1;
reg   [3:0] i_fu_140;
wire   [3:0] i_2_fu_438_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [8:0] bitcount_fu_144;
wire   [8:0] add_ln28_fu_780_p2;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [7:0] or_ln29_fu_478_p2;
wire   [7:0] or_ln30_fu_489_p2;
wire   [7:0] add_ln30_fu_504_p2;
wire   [3:0] div_udiv_2_fu_519_p4;
wire   [7:0] tmp_2_fu_529_p3;
wire   [7:0] or_ln29_4_fu_537_p2;
wire   [7:0] or_ln29_1_fu_791_p2;
wire   [7:0] add_ln30_1_fu_806_p2;
wire   [3:0] div_udiv_4_fu_812_p4;
wire   [7:0] tmp_5_fu_822_p3;
wire   [7:0] or_ln29_5_fu_830_p2;
wire   [7:0] add_ln30_2_fu_841_p2;
wire   [3:0] div_udiv_5_fu_846_p4;
wire   [7:0] tmp_7_fu_856_p3;
wire   [7:0] or_ln29_6_fu_864_p2;
wire   [7:0] add_ln30_3_fu_875_p2;
wire   [3:0] div_udiv_6_fu_880_p4;
wire   [7:0] tmp_9_fu_890_p3;
wire   [7:0] or_ln29_7_fu_898_p2;
wire   [7:0] or_ln29_2_fu_909_p2;
wire   [7:0] add_ln30_4_fu_924_p2;
wire   [3:0] div_udiv_8_fu_930_p4;
wire   [7:0] tmp_12_fu_940_p3;
wire   [7:0] or_ln29_8_fu_948_p2;
wire   [7:0] add_ln30_5_fu_959_p2;
wire   [3:0] div_udiv_9_fu_964_p4;
wire   [7:0] tmp_14_fu_974_p3;
wire   [7:0] or_ln29_9_fu_982_p2;
wire   [7:0] add_ln30_6_fu_993_p2;
wire   [3:0] div_udiv_s_fu_998_p4;
wire   [7:0] tmp_16_fu_1008_p3;
wire   [7:0] or_ln29_10_fu_1016_p2;
wire   [7:0] add_ln30_7_fu_1027_p2;
wire   [3:0] div_udiv_1_fu_1032_p4;
wire   [7:0] tmp_18_fu_1042_p3;
wire   [7:0] or_ln29_11_fu_1050_p2;
wire   [7:0] add_ln30_8_fu_1061_p2;
wire   [3:0] div_udiv_3_fu_1066_p4;
wire   [7:0] tmp_20_fu_1076_p3;
wire   [7:0] or_ln29_12_fu_1084_p2;
wire   [7:0] add_ln30_9_fu_1095_p2;
wire   [3:0] div_udiv_7_fu_1100_p4;
wire   [7:0] tmp_22_fu_1110_p3;
wire   [7:0] or_ln29_13_fu_1118_p2;
wire   [7:0] add_ln30_10_fu_1129_p2;
wire   [3:0] div_udiv_10_fu_1134_p4;
wire   [7:0] tmp_24_fu_1144_p3;
wire   [7:0] or_ln29_14_fu_1152_p2;
wire   [7:0] or_ln29_3_fu_1167_p2;
wire   [7:0] add_ln30_11_fu_1182_p2;
wire   [3:0] div_udiv_11_fu_1188_p4;
wire   [7:0] tmp_27_fu_1198_p3;
wire   [7:0] add_ln30_12_fu_1211_p2;
wire   [3:0] div_udiv_12_fu_1217_p4;
wire   [7:0] tmp_29_fu_1227_p3;
wire   [7:0] or_ln29_15_fu_1235_p2;
wire   [7:0] add_ln30_13_fu_1246_p2;
wire   [3:0] div_udiv_13_fu_1251_p4;
wire   [7:0] tmp_31_fu_1261_p3;
wire   [7:0] or_ln29_16_fu_1269_p2;
wire   [7:0] add_ln30_14_fu_1280_p2;
wire   [3:0] div_udiv_14_fu_1285_p4;
wire   [7:0] tmp_33_fu_1295_p3;
wire   [7:0] or_ln29_17_fu_1303_p2;
wire   [7:0] add_ln30_15_fu_1314_p2;
wire   [3:0] div_udiv_15_fu_1319_p4;
wire   [7:0] tmp_35_fu_1329_p3;
wire   [7:0] or_ln29_18_fu_1337_p2;
wire   [7:0] add_ln30_16_fu_1348_p2;
wire   [3:0] div_udiv_16_fu_1353_p4;
wire   [7:0] tmp_37_fu_1363_p3;
wire   [7:0] or_ln29_19_fu_1371_p2;
wire   [7:0] add_ln30_17_fu_1382_p2;
wire   [3:0] div_udiv_17_fu_1387_p4;
wire   [7:0] tmp_39_fu_1397_p3;
wire   [7:0] or_ln29_20_fu_1405_p2;
wire   [7:0] add_ln30_18_fu_1416_p2;
wire   [3:0] div_udiv_18_fu_1421_p4;
wire   [7:0] tmp_41_fu_1431_p3;
wire   [7:0] or_ln29_21_fu_1439_p2;
wire   [7:0] add_ln30_19_fu_1450_p2;
wire   [3:0] div_udiv_19_fu_1455_p4;
wire   [7:0] tmp_43_fu_1465_p3;
wire   [7:0] or_ln29_22_fu_1473_p2;
wire   [7:0] add_ln30_20_fu_1484_p2;
wire   [3:0] div_udiv_20_fu_1489_p4;
wire   [7:0] tmp_45_fu_1499_p3;
wire   [7:0] or_ln29_23_fu_1507_p2;
wire   [7:0] add_ln30_21_fu_1518_p2;
wire   [3:0] div_udiv_21_fu_1523_p4;
wire   [7:0] tmp_47_fu_1533_p3;
wire   [7:0] or_ln29_24_fu_1541_p2;
wire   [7:0] add_ln30_22_fu_1552_p2;
wire   [3:0] div_udiv_22_fu_1557_p4;
wire   [7:0] tmp_49_fu_1567_p3;
wire   [7:0] or_ln29_25_fu_1575_p2;
wire   [7:0] add_ln30_23_fu_1586_p2;
wire   [3:0] div_udiv_23_fu_1591_p4;
wire   [7:0] tmp_51_fu_1601_p3;
wire   [7:0] or_ln29_26_fu_1609_p2;
wire   [7:0] add_ln30_24_fu_1620_p2;
wire   [3:0] div_udiv_24_fu_1625_p4;
wire   [7:0] tmp_53_fu_1635_p3;
wire   [7:0] or_ln29_27_fu_1643_p2;
wire   [7:0] add_ln30_25_fu_1654_p2;
wire   [7:0] tmp_55_fu_1669_p3;
wire   [7:0] or_ln29_28_fu_1676_p2;
wire   [3:0] div_udiv_31_fu_1687_p2;
wire   [7:0] tmp_57_fu_1692_p3;
wire   [7:0] or_ln29_29_fu_1700_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dut_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bitcount_fu_144 <= 9'd0;
    end else if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bitcount_fu_144 <= add_ln28_fu_780_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_432_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_140 <= i_2_fu_438_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_140 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        div_udiv_25_reg_1932 <= {{add_ln30_25_fu_1654_p2[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        div_udiv_reg_1741 <= {{bitcount_fu_144[7:4]}};
        empty_21_reg_1729 <= empty_21_fu_452_p1;
        tmp_10_reg_1774 <= strm_in_dout[32'd7];
        tmp_11_reg_1779 <= strm_in_dout[32'd8];
        tmp_13_reg_1784 <= strm_in_dout[32'd9];
        tmp_15_reg_1789 <= strm_in_dout[32'd10];
        tmp_17_reg_1794 <= strm_in_dout[32'd11];
        tmp_19_reg_1799 <= strm_in_dout[32'd12];
        tmp_21_reg_1804 <= strm_in_dout[32'd13];
        tmp_23_reg_1809 <= strm_in_dout[32'd14];
        tmp_25_reg_1814 <= strm_in_dout[32'd15];
        tmp_26_reg_1819 <= strm_in_dout[32'd16];
        tmp_28_reg_1824 <= strm_in_dout[32'd17];
        tmp_30_reg_1829 <= strm_in_dout[32'd18];
        tmp_32_reg_1834 <= strm_in_dout[32'd19];
        tmp_34_reg_1839 <= strm_in_dout[32'd20];
        tmp_36_reg_1844 <= strm_in_dout[32'd21];
        tmp_38_reg_1849 <= strm_in_dout[32'd22];
        tmp_3_reg_1754 <= strm_in_dout[32'd3];
        tmp_40_reg_1854 <= strm_in_dout[32'd23];
        tmp_42_reg_1859 <= strm_in_dout[32'd24];
        tmp_44_reg_1864 <= strm_in_dout[32'd25];
        tmp_46_reg_1869 <= strm_in_dout[32'd26];
        tmp_48_reg_1874 <= strm_in_dout[32'd27];
        tmp_4_reg_1759 <= strm_in_dout[32'd4];
        tmp_50_reg_1879 <= strm_in_dout[32'd28];
        tmp_52_reg_1884 <= strm_in_dout[32'd29];
        tmp_54_reg_1889 <= strm_in_dout[32'd30];
        tmp_56_reg_1894 <= strm_in_dout[32'd31];
        tmp_6_reg_1764 <= strm_in_dout[32'd5];
        tmp_8_reg_1769 <= strm_in_dout[32'd6];
        tmp_s_reg_1746[7 : 4] <= tmp_s_fu_470_p3[7 : 4];
        trunc_ln714_reg_1736 <= trunc_ln714_fu_456_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln26_reg_1725 <= icmp_ln26_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln30_1_reg_1899[7 : 2] <= or_ln30_1_fu_801_p2[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln30_2_reg_1905[7 : 3] <= or_ln30_2_fu_919_p2[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        or_ln30_3_reg_1915[7 : 4] <= or_ln30_3_fu_1177_p2[7 : 4];
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_432_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_address0 = zext_ln29_31_fu_1706_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        input_0_address0 = zext_ln29_29_fu_1649_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        input_0_address0 = zext_ln29_27_fu_1581_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_0_address0 = zext_ln29_25_fu_1513_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_0_address0 = zext_ln29_23_fu_1445_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_0_address0 = zext_ln29_21_fu_1377_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_0_address0 = zext_ln29_19_fu_1309_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_0_address0 = zext_ln29_17_fu_1241_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_0_address0 = zext_ln29_5_fu_1172_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_0_address0 = zext_ln29_16_fu_1158_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_0_address0 = zext_ln29_14_fu_1090_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_0_address0 = zext_ln29_12_fu_1022_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_0_address0 = zext_ln29_10_fu_954_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_0_address0 = zext_ln29_9_fu_904_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_address0 = zext_ln29_7_fu_836_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_address0 = zext_ln29_6_fu_543_p1;
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_address1 = zext_ln29_30_fu_1682_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        input_0_address1 = zext_ln29_28_fu_1615_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        input_0_address1 = zext_ln29_26_fu_1547_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_0_address1 = zext_ln29_24_fu_1479_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_0_address1 = zext_ln29_22_fu_1411_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_0_address1 = zext_ln29_20_fu_1343_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_0_address1 = zext_ln29_18_fu_1275_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_0_address1 = zext_ln29_1_fu_1206_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_0_address1 = zext_ln29_fu_1163_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_0_address1 = zext_ln29_15_fu_1124_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_0_address1 = zext_ln29_13_fu_1056_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_0_address1 = zext_ln29_11_fu_988_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_0_address1 = zext_ln29_4_fu_914_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_0_address1 = zext_ln29_8_fu_870_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_address1 = zext_ln29_3_fu_796_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_address1 = zext_ln29_2_fu_484_p1;
    end else begin
        input_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_d0 = tmp_56_reg_1894;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        input_0_d0 = tmp_52_reg_1884;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        input_0_d0 = tmp_48_reg_1874;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_0_d0 = tmp_44_reg_1864;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_0_d0 = tmp_40_reg_1854;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_0_d0 = tmp_36_reg_1844;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_0_d0 = tmp_32_reg_1834;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_0_d0 = tmp_28_reg_1824;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_0_d0 = tmp_25_reg_1814;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_0_d0 = tmp_23_reg_1809;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_0_d0 = tmp_19_reg_1799;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_0_d0 = tmp_15_reg_1789;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_0_d0 = tmp_11_reg_1779;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_0_d0 = tmp_8_reg_1769;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_d0 = tmp_4_reg_1759;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_d0 = strm_in_dout[32'd2];
    end else begin
        input_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_d1 = tmp_54_reg_1889;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        input_0_d1 = tmp_50_reg_1879;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        input_0_d1 = tmp_46_reg_1869;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_0_d1 = tmp_42_reg_1859;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_0_d1 = tmp_38_reg_1849;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_0_d1 = tmp_34_reg_1839;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_0_d1 = tmp_30_reg_1829;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_0_d1 = tmp_26_reg_1819;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_0_d1 = trunc_ln714_reg_1736;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_0_d1 = tmp_21_reg_1804;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_0_d1 = tmp_17_reg_1794;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_0_d1 = tmp_13_reg_1784;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_0_d1 = tmp_10_reg_1774;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_0_d1 = tmp_6_reg_1764;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_d1 = tmp_3_reg_1754;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_d1 = strm_in_dout[32'd1];
    end else begin
        input_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_we0 = 1'b1;
    end else begin
        input_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_we1 = 1'b1;
    end else begin
        input_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        strm_in_blk_n = strm_in_empty_n;
    end else begin
        strm_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln26_reg_1725 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        strm_in_read = 1'b1;
    end else begin
        strm_in_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_fu_780_p2 = (bitcount_fu_144 + 9'd32);

assign add_ln30_10_fu_1129_p2 = (or_ln30_2_reg_1905 + 8'd7);

assign add_ln30_11_fu_1182_p2 = (or_ln30_3_fu_1177_p2 + 8'd1);

assign add_ln30_12_fu_1211_p2 = (or_ln30_3_fu_1177_p2 + 8'd2);

assign add_ln30_13_fu_1246_p2 = (or_ln30_3_reg_1915 + 8'd3);

assign add_ln30_14_fu_1280_p2 = (or_ln30_3_reg_1915 + 8'd4);

assign add_ln30_15_fu_1314_p2 = (or_ln30_3_reg_1915 + 8'd5);

assign add_ln30_16_fu_1348_p2 = (or_ln30_3_reg_1915 + 8'd6);

assign add_ln30_17_fu_1382_p2 = (or_ln30_3_reg_1915 + 8'd7);

assign add_ln30_18_fu_1416_p2 = (or_ln30_3_reg_1915 + 8'd8);

assign add_ln30_19_fu_1450_p2 = (or_ln30_3_reg_1915 + 8'd9);

assign add_ln30_1_fu_806_p2 = (or_ln30_1_fu_801_p2 + 8'd1);

assign add_ln30_20_fu_1484_p2 = (or_ln30_3_reg_1915 + 8'd10);

assign add_ln30_21_fu_1518_p2 = (or_ln30_3_reg_1915 + 8'd11);

assign add_ln30_22_fu_1552_p2 = (or_ln30_3_reg_1915 + 8'd12);

assign add_ln30_23_fu_1586_p2 = (or_ln30_3_reg_1915 + 8'd13);

assign add_ln30_24_fu_1620_p2 = (or_ln30_3_reg_1915 + 8'd14);

assign add_ln30_25_fu_1654_p2 = (or_ln30_3_reg_1915 + 8'd15);

assign add_ln30_2_fu_841_p2 = (or_ln30_1_reg_1899 + 8'd2);

assign add_ln30_3_fu_875_p2 = (or_ln30_1_reg_1899 + 8'd3);

assign add_ln30_4_fu_924_p2 = (or_ln30_2_fu_919_p2 + 8'd1);

assign add_ln30_5_fu_959_p2 = (or_ln30_2_reg_1905 + 8'd2);

assign add_ln30_6_fu_993_p2 = (or_ln30_2_reg_1905 + 8'd3);

assign add_ln30_7_fu_1027_p2 = (or_ln30_2_reg_1905 + 8'd4);

assign add_ln30_8_fu_1061_p2 = (or_ln30_2_reg_1905 + 8'd5);

assign add_ln30_9_fu_1095_p2 = (or_ln30_2_reg_1905 + 8'd6);

assign add_ln30_fu_504_p2 = (or_ln30_fu_489_p2 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln26_reg_1725 == 1'd0) & (strm_in_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln26_reg_1725 == 1'd0) & (strm_in_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln26_reg_1725 == 1'd0) & (strm_in_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign div_udiv_10_fu_1134_p4 = {{add_ln30_10_fu_1129_p2[7:4]}};

assign div_udiv_11_fu_1188_p4 = {{add_ln30_11_fu_1182_p2[7:4]}};

assign div_udiv_12_fu_1217_p4 = {{add_ln30_12_fu_1211_p2[7:4]}};

assign div_udiv_13_fu_1251_p4 = {{add_ln30_13_fu_1246_p2[7:4]}};

assign div_udiv_14_fu_1285_p4 = {{add_ln30_14_fu_1280_p2[7:4]}};

assign div_udiv_15_fu_1319_p4 = {{add_ln30_15_fu_1314_p2[7:4]}};

assign div_udiv_16_fu_1353_p4 = {{add_ln30_16_fu_1348_p2[7:4]}};

assign div_udiv_17_fu_1387_p4 = {{add_ln30_17_fu_1382_p2[7:4]}};

assign div_udiv_18_fu_1421_p4 = {{add_ln30_18_fu_1416_p2[7:4]}};

assign div_udiv_19_fu_1455_p4 = {{add_ln30_19_fu_1450_p2[7:4]}};

assign div_udiv_1_fu_1032_p4 = {{add_ln30_7_fu_1027_p2[7:4]}};

assign div_udiv_20_fu_1489_p4 = {{add_ln30_20_fu_1484_p2[7:4]}};

assign div_udiv_21_fu_1523_p4 = {{add_ln30_21_fu_1518_p2[7:4]}};

assign div_udiv_22_fu_1557_p4 = {{add_ln30_22_fu_1552_p2[7:4]}};

assign div_udiv_23_fu_1591_p4 = {{add_ln30_23_fu_1586_p2[7:4]}};

assign div_udiv_24_fu_1625_p4 = {{add_ln30_24_fu_1620_p2[7:4]}};

assign div_udiv_2_fu_519_p4 = {{add_ln30_fu_504_p2[7:4]}};

assign div_udiv_31_fu_1687_p2 = (div_udiv_reg_1741 | 4'd1);

assign div_udiv_3_fu_1066_p4 = {{add_ln30_8_fu_1061_p2[7:4]}};

assign div_udiv_4_fu_812_p4 = {{add_ln30_1_fu_806_p2[7:4]}};

assign div_udiv_5_fu_846_p4 = {{add_ln30_2_fu_841_p2[7:4]}};

assign div_udiv_6_fu_880_p4 = {{add_ln30_3_fu_875_p2[7:4]}};

assign div_udiv_7_fu_1100_p4 = {{add_ln30_9_fu_1095_p2[7:4]}};

assign div_udiv_8_fu_930_p4 = {{add_ln30_4_fu_924_p2[7:4]}};

assign div_udiv_9_fu_964_p4 = {{add_ln30_5_fu_959_p2[7:4]}};

assign div_udiv_fu_460_p4 = {{bitcount_fu_144[7:4]}};

assign div_udiv_s_fu_998_p4 = {{add_ln30_6_fu_993_p2[7:4]}};

assign empty_21_fu_452_p1 = bitcount_fu_144[7:0];

assign i_2_fu_438_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign icmp_ln26_fu_432_p2 = ((ap_sig_allocacmp_i_1 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln29_10_fu_1016_p2 = (tmp_16_fu_1008_p3 | 8'd10);

assign or_ln29_11_fu_1050_p2 = (tmp_18_fu_1042_p3 | 8'd11);

assign or_ln29_12_fu_1084_p2 = (tmp_20_fu_1076_p3 | 8'd12);

assign or_ln29_13_fu_1118_p2 = (tmp_22_fu_1110_p3 | 8'd13);

assign or_ln29_14_fu_1152_p2 = (tmp_24_fu_1144_p3 | 8'd14);

assign or_ln29_15_fu_1235_p2 = (tmp_29_fu_1227_p3 | 8'd1);

assign or_ln29_16_fu_1269_p2 = (tmp_31_fu_1261_p3 | 8'd2);

assign or_ln29_17_fu_1303_p2 = (tmp_33_fu_1295_p3 | 8'd3);

assign or_ln29_18_fu_1337_p2 = (tmp_35_fu_1329_p3 | 8'd4);

assign or_ln29_19_fu_1371_p2 = (tmp_37_fu_1363_p3 | 8'd5);

assign or_ln29_1_fu_791_p2 = (tmp_s_reg_1746 | 8'd3);

assign or_ln29_20_fu_1405_p2 = (tmp_39_fu_1397_p3 | 8'd6);

assign or_ln29_21_fu_1439_p2 = (tmp_41_fu_1431_p3 | 8'd7);

assign or_ln29_22_fu_1473_p2 = (tmp_43_fu_1465_p3 | 8'd8);

assign or_ln29_23_fu_1507_p2 = (tmp_45_fu_1499_p3 | 8'd9);

assign or_ln29_24_fu_1541_p2 = (tmp_47_fu_1533_p3 | 8'd10);

assign or_ln29_25_fu_1575_p2 = (tmp_49_fu_1567_p3 | 8'd11);

assign or_ln29_26_fu_1609_p2 = (tmp_51_fu_1601_p3 | 8'd12);

assign or_ln29_27_fu_1643_p2 = (tmp_53_fu_1635_p3 | 8'd13);

assign or_ln29_28_fu_1676_p2 = (tmp_55_fu_1669_p3 | 8'd14);

assign or_ln29_29_fu_1700_p2 = (tmp_57_fu_1692_p3 | 8'd15);

assign or_ln29_2_fu_909_p2 = (tmp_s_reg_1746 | 8'd7);

assign or_ln29_3_fu_1167_p2 = (tmp_s_reg_1746 | 8'd15);

assign or_ln29_4_fu_537_p2 = (tmp_2_fu_529_p3 | 8'd2);

assign or_ln29_5_fu_830_p2 = (tmp_5_fu_822_p3 | 8'd4);

assign or_ln29_6_fu_864_p2 = (tmp_7_fu_856_p3 | 8'd5);

assign or_ln29_7_fu_898_p2 = (tmp_9_fu_890_p3 | 8'd6);

assign or_ln29_8_fu_948_p2 = (tmp_12_fu_940_p3 | 8'd8);

assign or_ln29_9_fu_982_p2 = (tmp_14_fu_974_p3 | 8'd9);

assign or_ln29_fu_478_p2 = (tmp_s_fu_470_p3 | 8'd1);

assign or_ln30_1_fu_801_p2 = (empty_21_reg_1729 | 8'd3);

assign or_ln30_2_fu_919_p2 = (empty_21_reg_1729 | 8'd7);

assign or_ln30_3_fu_1177_p2 = (empty_21_reg_1729 | 8'd15);

assign or_ln30_fu_489_p2 = (empty_21_fu_452_p1 | 8'd1);

assign tmp_12_fu_940_p3 = {{div_udiv_8_fu_930_p4}, {4'd0}};

assign tmp_14_fu_974_p3 = {{div_udiv_9_fu_964_p4}, {4'd0}};

assign tmp_16_fu_1008_p3 = {{div_udiv_s_fu_998_p4}, {4'd0}};

assign tmp_18_fu_1042_p3 = {{div_udiv_1_fu_1032_p4}, {4'd0}};

assign tmp_20_fu_1076_p3 = {{div_udiv_3_fu_1066_p4}, {4'd0}};

assign tmp_22_fu_1110_p3 = {{div_udiv_7_fu_1100_p4}, {4'd0}};

assign tmp_24_fu_1144_p3 = {{div_udiv_10_fu_1134_p4}, {4'd0}};

assign tmp_27_fu_1198_p3 = {{div_udiv_11_fu_1188_p4}, {4'd0}};

assign tmp_29_fu_1227_p3 = {{div_udiv_12_fu_1217_p4}, {4'd0}};

assign tmp_2_fu_529_p3 = {{div_udiv_2_fu_519_p4}, {4'd0}};

assign tmp_31_fu_1261_p3 = {{div_udiv_13_fu_1251_p4}, {4'd0}};

assign tmp_33_fu_1295_p3 = {{div_udiv_14_fu_1285_p4}, {4'd0}};

assign tmp_35_fu_1329_p3 = {{div_udiv_15_fu_1319_p4}, {4'd0}};

assign tmp_37_fu_1363_p3 = {{div_udiv_16_fu_1353_p4}, {4'd0}};

assign tmp_39_fu_1397_p3 = {{div_udiv_17_fu_1387_p4}, {4'd0}};

assign tmp_41_fu_1431_p3 = {{div_udiv_18_fu_1421_p4}, {4'd0}};

assign tmp_43_fu_1465_p3 = {{div_udiv_19_fu_1455_p4}, {4'd0}};

assign tmp_45_fu_1499_p3 = {{div_udiv_20_fu_1489_p4}, {4'd0}};

assign tmp_47_fu_1533_p3 = {{div_udiv_21_fu_1523_p4}, {4'd0}};

assign tmp_49_fu_1567_p3 = {{div_udiv_22_fu_1557_p4}, {4'd0}};

assign tmp_51_fu_1601_p3 = {{div_udiv_23_fu_1591_p4}, {4'd0}};

assign tmp_53_fu_1635_p3 = {{div_udiv_24_fu_1625_p4}, {4'd0}};

assign tmp_55_fu_1669_p3 = {{div_udiv_25_reg_1932}, {4'd0}};

assign tmp_57_fu_1692_p3 = {{div_udiv_31_fu_1687_p2}, {4'd0}};

assign tmp_5_fu_822_p3 = {{div_udiv_4_fu_812_p4}, {4'd0}};

assign tmp_7_fu_856_p3 = {{div_udiv_5_fu_846_p4}, {4'd0}};

assign tmp_9_fu_890_p3 = {{div_udiv_6_fu_880_p4}, {4'd0}};

assign tmp_s_fu_470_p3 = {{div_udiv_fu_460_p4}, {4'd0}};

assign trunc_ln714_fu_456_p1 = strm_in_dout[0:0];

assign zext_ln29_10_fu_954_p1 = or_ln29_8_fu_948_p2;

assign zext_ln29_11_fu_988_p1 = or_ln29_9_fu_982_p2;

assign zext_ln29_12_fu_1022_p1 = or_ln29_10_fu_1016_p2;

assign zext_ln29_13_fu_1056_p1 = or_ln29_11_fu_1050_p2;

assign zext_ln29_14_fu_1090_p1 = or_ln29_12_fu_1084_p2;

assign zext_ln29_15_fu_1124_p1 = or_ln29_13_fu_1118_p2;

assign zext_ln29_16_fu_1158_p1 = or_ln29_14_fu_1152_p2;

assign zext_ln29_17_fu_1241_p1 = or_ln29_15_fu_1235_p2;

assign zext_ln29_18_fu_1275_p1 = or_ln29_16_fu_1269_p2;

assign zext_ln29_19_fu_1309_p1 = or_ln29_17_fu_1303_p2;

assign zext_ln29_1_fu_1206_p1 = tmp_27_fu_1198_p3;

assign zext_ln29_20_fu_1343_p1 = or_ln29_18_fu_1337_p2;

assign zext_ln29_21_fu_1377_p1 = or_ln29_19_fu_1371_p2;

assign zext_ln29_22_fu_1411_p1 = or_ln29_20_fu_1405_p2;

assign zext_ln29_23_fu_1445_p1 = or_ln29_21_fu_1439_p2;

assign zext_ln29_24_fu_1479_p1 = or_ln29_22_fu_1473_p2;

assign zext_ln29_25_fu_1513_p1 = or_ln29_23_fu_1507_p2;

assign zext_ln29_26_fu_1547_p1 = or_ln29_24_fu_1541_p2;

assign zext_ln29_27_fu_1581_p1 = or_ln29_25_fu_1575_p2;

assign zext_ln29_28_fu_1615_p1 = or_ln29_26_fu_1609_p2;

assign zext_ln29_29_fu_1649_p1 = or_ln29_27_fu_1643_p2;

assign zext_ln29_2_fu_484_p1 = or_ln29_fu_478_p2;

assign zext_ln29_30_fu_1682_p1 = or_ln29_28_fu_1676_p2;

assign zext_ln29_31_fu_1706_p1 = or_ln29_29_fu_1700_p2;

assign zext_ln29_3_fu_796_p1 = or_ln29_1_fu_791_p2;

assign zext_ln29_4_fu_914_p1 = or_ln29_2_fu_909_p2;

assign zext_ln29_5_fu_1172_p1 = or_ln29_3_fu_1167_p2;

assign zext_ln29_6_fu_543_p1 = or_ln29_4_fu_537_p2;

assign zext_ln29_7_fu_836_p1 = or_ln29_5_fu_830_p2;

assign zext_ln29_8_fu_870_p1 = or_ln29_6_fu_864_p2;

assign zext_ln29_9_fu_904_p1 = or_ln29_7_fu_898_p2;

assign zext_ln29_fu_1163_p1 = tmp_s_reg_1746;

always @ (posedge ap_clk) begin
    tmp_s_reg_1746[3:0] <= 4'b0000;
    or_ln30_1_reg_1899[1:0] <= 2'b11;
    or_ln30_2_reg_1905[2:0] <= 3'b111;
    or_ln30_3_reg_1915[3:0] <= 4'b1111;
end

endmodule //dut_dut_Pipeline_VITIS_LOOP_26_1
