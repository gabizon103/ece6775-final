// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_bnn_xcel_Pipeline_m_loop_x_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_0_0_address0,
        conv2_0_0_ce0,
        conv2_0_0_q0,
        conv2_0_2_address0,
        conv2_0_2_ce0,
        conv2_0_2_q0,
        conv2_0_4_address0,
        conv2_0_4_ce0,
        conv2_0_4_q0,
        conv2_0_6_address0,
        conv2_0_6_ce0,
        conv2_0_6_q0,
        conv2_1_0_address0,
        conv2_1_0_ce0,
        conv2_1_0_q0,
        conv2_1_2_address0,
        conv2_1_2_ce0,
        conv2_1_2_q0,
        conv2_1_4_address0,
        conv2_1_4_ce0,
        conv2_1_4_q0,
        conv2_1_6_address0,
        conv2_1_6_ce0,
        conv2_1_6_q0,
        conv2_0_1_address0,
        conv2_0_1_ce0,
        conv2_0_1_q0,
        conv2_0_3_address0,
        conv2_0_3_ce0,
        conv2_0_3_q0,
        conv2_0_5_address0,
        conv2_0_5_ce0,
        conv2_0_5_q0,
        conv2_0_7_address0,
        conv2_0_7_ce0,
        conv2_0_7_q0,
        conv2_1_1_address0,
        conv2_1_1_ce0,
        conv2_1_1_q0,
        conv2_1_3_address0,
        conv2_1_3_ce0,
        conv2_1_3_q0,
        conv2_1_5_address0,
        conv2_1_5_ce0,
        conv2_1_5_q0,
        conv2_1_7_address0,
        conv2_1_7_ce0,
        conv2_1_7_q0,
        conv2_2_0_address0,
        conv2_2_0_ce0,
        conv2_2_0_q0,
        conv2_2_2_address0,
        conv2_2_2_ce0,
        conv2_2_2_q0,
        conv2_2_4_address0,
        conv2_2_4_ce0,
        conv2_2_4_q0,
        conv2_2_6_address0,
        conv2_2_6_ce0,
        conv2_2_6_q0,
        conv2_3_0_address0,
        conv2_3_0_ce0,
        conv2_3_0_q0,
        conv2_3_2_address0,
        conv2_3_2_ce0,
        conv2_3_2_q0,
        conv2_3_4_address0,
        conv2_3_4_ce0,
        conv2_3_4_q0,
        conv2_3_6_address0,
        conv2_3_6_ce0,
        conv2_3_6_q0,
        conv2_2_1_address0,
        conv2_2_1_ce0,
        conv2_2_1_q0,
        conv2_2_3_address0,
        conv2_2_3_ce0,
        conv2_2_3_q0,
        conv2_2_5_address0,
        conv2_2_5_ce0,
        conv2_2_5_q0,
        conv2_2_7_address0,
        conv2_2_7_ce0,
        conv2_2_7_q0,
        conv2_3_1_address0,
        conv2_3_1_ce0,
        conv2_3_1_q0,
        conv2_3_3_address0,
        conv2_3_3_ce0,
        conv2_3_3_q0,
        conv2_3_5_address0,
        conv2_3_5_ce0,
        conv2_3_5_q0,
        conv2_3_7_address0,
        conv2_3_7_ce0,
        conv2_3_7_q0,
        conv2_4_0_address0,
        conv2_4_0_ce0,
        conv2_4_0_q0,
        conv2_4_2_address0,
        conv2_4_2_ce0,
        conv2_4_2_q0,
        conv2_4_4_address0,
        conv2_4_4_ce0,
        conv2_4_4_q0,
        conv2_4_6_address0,
        conv2_4_6_ce0,
        conv2_4_6_q0,
        conv2_5_0_address0,
        conv2_5_0_ce0,
        conv2_5_0_q0,
        conv2_5_2_address0,
        conv2_5_2_ce0,
        conv2_5_2_q0,
        conv2_5_4_address0,
        conv2_5_4_ce0,
        conv2_5_4_q0,
        conv2_5_6_address0,
        conv2_5_6_ce0,
        conv2_5_6_q0,
        conv2_4_1_address0,
        conv2_4_1_ce0,
        conv2_4_1_q0,
        conv2_4_3_address0,
        conv2_4_3_ce0,
        conv2_4_3_q0,
        conv2_4_5_address0,
        conv2_4_5_ce0,
        conv2_4_5_q0,
        conv2_4_7_address0,
        conv2_4_7_ce0,
        conv2_4_7_q0,
        conv2_5_1_address0,
        conv2_5_1_ce0,
        conv2_5_1_q0,
        conv2_5_3_address0,
        conv2_5_3_ce0,
        conv2_5_3_q0,
        conv2_5_5_address0,
        conv2_5_5_ce0,
        conv2_5_5_q0,
        conv2_5_7_address0,
        conv2_5_7_ce0,
        conv2_5_7_q0,
        conv2_6_0_address0,
        conv2_6_0_ce0,
        conv2_6_0_q0,
        conv2_6_2_address0,
        conv2_6_2_ce0,
        conv2_6_2_q0,
        conv2_6_4_address0,
        conv2_6_4_ce0,
        conv2_6_4_q0,
        conv2_6_6_address0,
        conv2_6_6_ce0,
        conv2_6_6_q0,
        conv2_7_0_address0,
        conv2_7_0_ce0,
        conv2_7_0_q0,
        conv2_7_2_address0,
        conv2_7_2_ce0,
        conv2_7_2_q0,
        conv2_7_4_address0,
        conv2_7_4_ce0,
        conv2_7_4_q0,
        conv2_7_6_address0,
        conv2_7_6_ce0,
        conv2_7_6_q0,
        conv2_6_1_address0,
        conv2_6_1_ce0,
        conv2_6_1_q0,
        conv2_6_3_address0,
        conv2_6_3_ce0,
        conv2_6_3_q0,
        conv2_6_5_address0,
        conv2_6_5_ce0,
        conv2_6_5_q0,
        conv2_6_7_address0,
        conv2_6_7_ce0,
        conv2_6_7_q0,
        conv2_7_1_address0,
        conv2_7_1_ce0,
        conv2_7_1_q0,
        conv2_7_3_address0,
        conv2_7_3_ce0,
        conv2_7_3_q0,
        conv2_7_5_address0,
        conv2_7_5_ce0,
        conv2_7_5_q0,
        conv2_7_7_address0,
        conv2_7_7_ce0,
        conv2_7_7_q0,
        conv2_pooled_address0,
        conv2_pooled_ce0,
        conv2_pooled_we0,
        conv2_pooled_d0,
        conv2_pooled_1_address0,
        conv2_pooled_1_ce0,
        conv2_pooled_1_we0,
        conv2_pooled_1_d0,
        conv2_pooled_2_address0,
        conv2_pooled_2_ce0,
        conv2_pooled_2_we0,
        conv2_pooled_2_d0,
        conv2_pooled_3_address0,
        conv2_pooled_3_ce0,
        conv2_pooled_3_we0,
        conv2_pooled_3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] conv2_0_0_address0;
output   conv2_0_0_ce0;
input  [0:0] conv2_0_0_q0;
output  [4:0] conv2_0_2_address0;
output   conv2_0_2_ce0;
input  [0:0] conv2_0_2_q0;
output  [4:0] conv2_0_4_address0;
output   conv2_0_4_ce0;
input  [0:0] conv2_0_4_q0;
output  [4:0] conv2_0_6_address0;
output   conv2_0_6_ce0;
input  [0:0] conv2_0_6_q0;
output  [4:0] conv2_1_0_address0;
output   conv2_1_0_ce0;
input  [0:0] conv2_1_0_q0;
output  [4:0] conv2_1_2_address0;
output   conv2_1_2_ce0;
input  [0:0] conv2_1_2_q0;
output  [4:0] conv2_1_4_address0;
output   conv2_1_4_ce0;
input  [0:0] conv2_1_4_q0;
output  [4:0] conv2_1_6_address0;
output   conv2_1_6_ce0;
input  [0:0] conv2_1_6_q0;
output  [4:0] conv2_0_1_address0;
output   conv2_0_1_ce0;
input  [0:0] conv2_0_1_q0;
output  [4:0] conv2_0_3_address0;
output   conv2_0_3_ce0;
input  [0:0] conv2_0_3_q0;
output  [4:0] conv2_0_5_address0;
output   conv2_0_5_ce0;
input  [0:0] conv2_0_5_q0;
output  [4:0] conv2_0_7_address0;
output   conv2_0_7_ce0;
input  [0:0] conv2_0_7_q0;
output  [4:0] conv2_1_1_address0;
output   conv2_1_1_ce0;
input  [0:0] conv2_1_1_q0;
output  [4:0] conv2_1_3_address0;
output   conv2_1_3_ce0;
input  [0:0] conv2_1_3_q0;
output  [4:0] conv2_1_5_address0;
output   conv2_1_5_ce0;
input  [0:0] conv2_1_5_q0;
output  [4:0] conv2_1_7_address0;
output   conv2_1_7_ce0;
input  [0:0] conv2_1_7_q0;
output  [4:0] conv2_2_0_address0;
output   conv2_2_0_ce0;
input  [0:0] conv2_2_0_q0;
output  [4:0] conv2_2_2_address0;
output   conv2_2_2_ce0;
input  [0:0] conv2_2_2_q0;
output  [4:0] conv2_2_4_address0;
output   conv2_2_4_ce0;
input  [0:0] conv2_2_4_q0;
output  [4:0] conv2_2_6_address0;
output   conv2_2_6_ce0;
input  [0:0] conv2_2_6_q0;
output  [4:0] conv2_3_0_address0;
output   conv2_3_0_ce0;
input  [0:0] conv2_3_0_q0;
output  [4:0] conv2_3_2_address0;
output   conv2_3_2_ce0;
input  [0:0] conv2_3_2_q0;
output  [4:0] conv2_3_4_address0;
output   conv2_3_4_ce0;
input  [0:0] conv2_3_4_q0;
output  [4:0] conv2_3_6_address0;
output   conv2_3_6_ce0;
input  [0:0] conv2_3_6_q0;
output  [4:0] conv2_2_1_address0;
output   conv2_2_1_ce0;
input  [0:0] conv2_2_1_q0;
output  [4:0] conv2_2_3_address0;
output   conv2_2_3_ce0;
input  [0:0] conv2_2_3_q0;
output  [4:0] conv2_2_5_address0;
output   conv2_2_5_ce0;
input  [0:0] conv2_2_5_q0;
output  [4:0] conv2_2_7_address0;
output   conv2_2_7_ce0;
input  [0:0] conv2_2_7_q0;
output  [4:0] conv2_3_1_address0;
output   conv2_3_1_ce0;
input  [0:0] conv2_3_1_q0;
output  [4:0] conv2_3_3_address0;
output   conv2_3_3_ce0;
input  [0:0] conv2_3_3_q0;
output  [4:0] conv2_3_5_address0;
output   conv2_3_5_ce0;
input  [0:0] conv2_3_5_q0;
output  [4:0] conv2_3_7_address0;
output   conv2_3_7_ce0;
input  [0:0] conv2_3_7_q0;
output  [4:0] conv2_4_0_address0;
output   conv2_4_0_ce0;
input  [0:0] conv2_4_0_q0;
output  [4:0] conv2_4_2_address0;
output   conv2_4_2_ce0;
input  [0:0] conv2_4_2_q0;
output  [4:0] conv2_4_4_address0;
output   conv2_4_4_ce0;
input  [0:0] conv2_4_4_q0;
output  [4:0] conv2_4_6_address0;
output   conv2_4_6_ce0;
input  [0:0] conv2_4_6_q0;
output  [4:0] conv2_5_0_address0;
output   conv2_5_0_ce0;
input  [0:0] conv2_5_0_q0;
output  [4:0] conv2_5_2_address0;
output   conv2_5_2_ce0;
input  [0:0] conv2_5_2_q0;
output  [4:0] conv2_5_4_address0;
output   conv2_5_4_ce0;
input  [0:0] conv2_5_4_q0;
output  [4:0] conv2_5_6_address0;
output   conv2_5_6_ce0;
input  [0:0] conv2_5_6_q0;
output  [4:0] conv2_4_1_address0;
output   conv2_4_1_ce0;
input  [0:0] conv2_4_1_q0;
output  [4:0] conv2_4_3_address0;
output   conv2_4_3_ce0;
input  [0:0] conv2_4_3_q0;
output  [4:0] conv2_4_5_address0;
output   conv2_4_5_ce0;
input  [0:0] conv2_4_5_q0;
output  [4:0] conv2_4_7_address0;
output   conv2_4_7_ce0;
input  [0:0] conv2_4_7_q0;
output  [4:0] conv2_5_1_address0;
output   conv2_5_1_ce0;
input  [0:0] conv2_5_1_q0;
output  [4:0] conv2_5_3_address0;
output   conv2_5_3_ce0;
input  [0:0] conv2_5_3_q0;
output  [4:0] conv2_5_5_address0;
output   conv2_5_5_ce0;
input  [0:0] conv2_5_5_q0;
output  [4:0] conv2_5_7_address0;
output   conv2_5_7_ce0;
input  [0:0] conv2_5_7_q0;
output  [4:0] conv2_6_0_address0;
output   conv2_6_0_ce0;
input  [0:0] conv2_6_0_q0;
output  [4:0] conv2_6_2_address0;
output   conv2_6_2_ce0;
input  [0:0] conv2_6_2_q0;
output  [4:0] conv2_6_4_address0;
output   conv2_6_4_ce0;
input  [0:0] conv2_6_4_q0;
output  [4:0] conv2_6_6_address0;
output   conv2_6_6_ce0;
input  [0:0] conv2_6_6_q0;
output  [4:0] conv2_7_0_address0;
output   conv2_7_0_ce0;
input  [0:0] conv2_7_0_q0;
output  [4:0] conv2_7_2_address0;
output   conv2_7_2_ce0;
input  [0:0] conv2_7_2_q0;
output  [4:0] conv2_7_4_address0;
output   conv2_7_4_ce0;
input  [0:0] conv2_7_4_q0;
output  [4:0] conv2_7_6_address0;
output   conv2_7_6_ce0;
input  [0:0] conv2_7_6_q0;
output  [4:0] conv2_6_1_address0;
output   conv2_6_1_ce0;
input  [0:0] conv2_6_1_q0;
output  [4:0] conv2_6_3_address0;
output   conv2_6_3_ce0;
input  [0:0] conv2_6_3_q0;
output  [4:0] conv2_6_5_address0;
output   conv2_6_5_ce0;
input  [0:0] conv2_6_5_q0;
output  [4:0] conv2_6_7_address0;
output   conv2_6_7_ce0;
input  [0:0] conv2_6_7_q0;
output  [4:0] conv2_7_1_address0;
output   conv2_7_1_ce0;
input  [0:0] conv2_7_1_q0;
output  [4:0] conv2_7_3_address0;
output   conv2_7_3_ce0;
input  [0:0] conv2_7_3_q0;
output  [4:0] conv2_7_5_address0;
output   conv2_7_5_ce0;
input  [0:0] conv2_7_5_q0;
output  [4:0] conv2_7_7_address0;
output   conv2_7_7_ce0;
input  [0:0] conv2_7_7_q0;
output  [6:0] conv2_pooled_address0;
output   conv2_pooled_ce0;
output   conv2_pooled_we0;
output  [0:0] conv2_pooled_d0;
output  [6:0] conv2_pooled_1_address0;
output   conv2_pooled_1_ce0;
output   conv2_pooled_1_we0;
output  [0:0] conv2_pooled_1_d0;
output  [6:0] conv2_pooled_2_address0;
output   conv2_pooled_2_ce0;
output   conv2_pooled_2_we0;
output  [0:0] conv2_pooled_2_d0;
output  [6:0] conv2_pooled_3_address0;
output   conv2_pooled_3_ce0;
output   conv2_pooled_3_we0;
output  [0:0] conv2_pooled_3_d0;

reg ap_idle;
reg conv2_0_0_ce0;
reg conv2_0_2_ce0;
reg conv2_0_4_ce0;
reg conv2_0_6_ce0;
reg conv2_1_0_ce0;
reg conv2_1_2_ce0;
reg conv2_1_4_ce0;
reg conv2_1_6_ce0;
reg conv2_0_1_ce0;
reg conv2_0_3_ce0;
reg conv2_0_5_ce0;
reg conv2_0_7_ce0;
reg conv2_1_1_ce0;
reg conv2_1_3_ce0;
reg conv2_1_5_ce0;
reg conv2_1_7_ce0;
reg conv2_2_0_ce0;
reg conv2_2_2_ce0;
reg conv2_2_4_ce0;
reg conv2_2_6_ce0;
reg conv2_3_0_ce0;
reg conv2_3_2_ce0;
reg conv2_3_4_ce0;
reg conv2_3_6_ce0;
reg conv2_2_1_ce0;
reg conv2_2_3_ce0;
reg conv2_2_5_ce0;
reg conv2_2_7_ce0;
reg conv2_3_1_ce0;
reg conv2_3_3_ce0;
reg conv2_3_5_ce0;
reg conv2_3_7_ce0;
reg conv2_4_0_ce0;
reg conv2_4_2_ce0;
reg conv2_4_4_ce0;
reg conv2_4_6_ce0;
reg conv2_5_0_ce0;
reg conv2_5_2_ce0;
reg conv2_5_4_ce0;
reg conv2_5_6_ce0;
reg conv2_4_1_ce0;
reg conv2_4_3_ce0;
reg conv2_4_5_ce0;
reg conv2_4_7_ce0;
reg conv2_5_1_ce0;
reg conv2_5_3_ce0;
reg conv2_5_5_ce0;
reg conv2_5_7_ce0;
reg conv2_6_0_ce0;
reg conv2_6_2_ce0;
reg conv2_6_4_ce0;
reg conv2_6_6_ce0;
reg conv2_7_0_ce0;
reg conv2_7_2_ce0;
reg conv2_7_4_ce0;
reg conv2_7_6_ce0;
reg conv2_6_1_ce0;
reg conv2_6_3_ce0;
reg conv2_6_5_ce0;
reg conv2_6_7_ce0;
reg conv2_7_1_ce0;
reg conv2_7_3_ce0;
reg conv2_7_5_ce0;
reg conv2_7_7_ce0;
reg conv2_pooled_ce0;
reg conv2_pooled_we0;
reg conv2_pooled_1_ce0;
reg conv2_pooled_1_we0;
reg conv2_pooled_2_ce0;
reg conv2_pooled_2_we0;
reg conv2_pooled_3_ce0;
reg conv2_pooled_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln130_fu_1096_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] select_ln130_fu_1126_p3;
reg   [2:0] select_ln130_reg_1700;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] trunc_ln141_fu_1142_p1;
reg   [4:0] trunc_ln141_reg_1706;
wire   [63:0] zext_ln130_fu_1162_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln141_1_fu_1267_p1;
reg   [2:0] x_fu_182;
wire   [2:0] add_ln131_fu_1230_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_x_load;
reg   [5:0] m_1_fu_186;
wire   [5:0] select_ln130_2_fu_1134_p3;
reg   [5:0] ap_sig_allocacmp_m_1_load;
reg   [7:0] indvar_flatten77_fu_190;
wire   [7:0] add_ln130_2_fu_1102_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten77_load;
wire   [0:0] icmp_ln131_fu_1120_p2;
wire   [5:0] add_ln130_fu_1114_p2;
wire   [4:0] trunc_ln130_fu_1146_p1;
wire   [4:0] trunc_ln130_1_fu_1150_p1;
wire   [4:0] select_ln130_4_fu_1154_p3;
wire   [6:0] tmp_s_fu_1251_p3;
wire   [6:0] zext_ln141_fu_1258_p1;
wire   [6:0] add_ln141_fu_1261_p2;
wire   [2:0] empty_35_fu_1275_p2;
wire   [0:0] tmp_58_fu_1300_p9;
wire   [0:0] max_fu_1280_p9;
wire   [0:0] tmp_59_fu_1320_p9;
wire   [0:0] tmp_60_fu_1340_p9;
wire   [0:0] or_ln137_24_fu_1366_p2;
wire   [0:0] or_ln137_fu_1360_p2;
wire   [0:0] tmp_61_fu_1399_p9;
wire   [0:0] max_17_fu_1379_p9;
wire   [0:0] tmp_62_fu_1419_p9;
wire   [0:0] tmp_63_fu_1439_p9;
wire   [0:0] or_ln137_27_fu_1465_p2;
wire   [0:0] or_ln137_26_fu_1459_p2;
wire   [0:0] tmp_64_fu_1498_p9;
wire   [0:0] max_19_fu_1478_p9;
wire   [0:0] tmp_65_fu_1518_p9;
wire   [0:0] tmp_66_fu_1538_p9;
wire   [0:0] or_ln137_30_fu_1564_p2;
wire   [0:0] or_ln137_29_fu_1558_p2;
wire   [0:0] tmp_67_fu_1597_p9;
wire   [0:0] max_21_fu_1577_p9;
wire   [0:0] tmp_68_fu_1617_p9;
wire   [0:0] tmp_69_fu_1637_p9;
wire   [0:0] or_ln137_33_fu_1663_p2;
wire   [0:0] or_ln137_32_fu_1657_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U384(
    .din0(conv2_0_0_q0),
    .din1(1'd0),
    .din2(conv2_0_2_q0),
    .din3(1'd0),
    .din4(conv2_0_4_q0),
    .din5(1'd0),
    .din6(conv2_0_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(max_fu_1280_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U385(
    .din0(conv2_1_0_q0),
    .din1(1'd0),
    .din2(conv2_1_2_q0),
    .din3(1'd0),
    .din4(conv2_1_4_q0),
    .din5(1'd0),
    .din6(conv2_1_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_58_fu_1300_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U386(
    .din0(conv2_0_1_q0),
    .din1(1'd0),
    .din2(conv2_0_3_q0),
    .din3(1'd0),
    .din4(conv2_0_5_q0),
    .din5(1'd0),
    .din6(conv2_0_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_59_fu_1320_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U387(
    .din0(conv2_1_1_q0),
    .din1(1'd0),
    .din2(conv2_1_3_q0),
    .din3(1'd0),
    .din4(conv2_1_5_q0),
    .din5(1'd0),
    .din6(conv2_1_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_60_fu_1340_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U388(
    .din0(conv2_2_0_q0),
    .din1(1'd0),
    .din2(conv2_2_2_q0),
    .din3(1'd0),
    .din4(conv2_2_4_q0),
    .din5(1'd0),
    .din6(conv2_2_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(max_17_fu_1379_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U389(
    .din0(conv2_3_0_q0),
    .din1(1'd0),
    .din2(conv2_3_2_q0),
    .din3(1'd0),
    .din4(conv2_3_4_q0),
    .din5(1'd0),
    .din6(conv2_3_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_61_fu_1399_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U390(
    .din0(conv2_2_1_q0),
    .din1(1'd0),
    .din2(conv2_2_3_q0),
    .din3(1'd0),
    .din4(conv2_2_5_q0),
    .din5(1'd0),
    .din6(conv2_2_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_62_fu_1419_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U391(
    .din0(conv2_3_1_q0),
    .din1(1'd0),
    .din2(conv2_3_3_q0),
    .din3(1'd0),
    .din4(conv2_3_5_q0),
    .din5(1'd0),
    .din6(conv2_3_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_63_fu_1439_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U392(
    .din0(conv2_4_0_q0),
    .din1(1'd0),
    .din2(conv2_4_2_q0),
    .din3(1'd0),
    .din4(conv2_4_4_q0),
    .din5(1'd0),
    .din6(conv2_4_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(max_19_fu_1478_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U393(
    .din0(conv2_5_0_q0),
    .din1(1'd0),
    .din2(conv2_5_2_q0),
    .din3(1'd0),
    .din4(conv2_5_4_q0),
    .din5(1'd0),
    .din6(conv2_5_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_64_fu_1498_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U394(
    .din0(conv2_4_1_q0),
    .din1(1'd0),
    .din2(conv2_4_3_q0),
    .din3(1'd0),
    .din4(conv2_4_5_q0),
    .din5(1'd0),
    .din6(conv2_4_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_65_fu_1518_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U395(
    .din0(conv2_5_1_q0),
    .din1(1'd0),
    .din2(conv2_5_3_q0),
    .din3(1'd0),
    .din4(conv2_5_5_q0),
    .din5(1'd0),
    .din6(conv2_5_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_66_fu_1538_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U396(
    .din0(conv2_6_0_q0),
    .din1(1'd0),
    .din2(conv2_6_2_q0),
    .din3(1'd0),
    .din4(conv2_6_4_q0),
    .din5(1'd0),
    .din6(conv2_6_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(max_21_fu_1577_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U397(
    .din0(conv2_7_0_q0),
    .din1(1'd0),
    .din2(conv2_7_2_q0),
    .din3(1'd0),
    .din4(conv2_7_4_q0),
    .din5(1'd0),
    .din6(conv2_7_6_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_67_fu_1597_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U398(
    .din0(conv2_6_1_q0),
    .din1(1'd0),
    .din2(conv2_6_3_q0),
    .din3(1'd0),
    .din4(conv2_6_5_q0),
    .din5(1'd0),
    .din6(conv2_6_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_68_fu_1617_p9)
);

dut_mux_73_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_73_1_1_1_U399(
    .din0(conv2_7_1_q0),
    .din1(1'd0),
    .din2(conv2_7_3_q0),
    .din3(1'd0),
    .din4(conv2_7_5_q0),
    .din5(1'd0),
    .din6(conv2_7_7_q0),
    .din7(empty_35_fu_1275_p2),
    .dout(tmp_69_fu_1637_p9)
);

dut_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln130_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten77_fu_190 <= add_ln130_2_fu_1102_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten77_fu_190 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln130_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            m_1_fu_186 <= select_ln130_2_fu_1134_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            m_1_fu_186 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln130_fu_1096_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_182 <= add_ln131_fu_1230_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_182 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln130_fu_1096_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln130_reg_1700 <= select_ln130_fu_1126_p3;
        trunc_ln141_reg_1706 <= trunc_ln141_fu_1142_p1;
    end
end

always @ (*) begin
    if (((icmp_ln130_fu_1096_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten77_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten77_load = indvar_flatten77_fu_190;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_1_load = 6'd0;
    end else begin
        ap_sig_allocacmp_m_1_load = m_1_fu_186;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_load = 3'd0;
    end else begin
        ap_sig_allocacmp_x_load = x_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_0_ce0 = 1'b1;
    end else begin
        conv2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_1_ce0 = 1'b1;
    end else begin
        conv2_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_2_ce0 = 1'b1;
    end else begin
        conv2_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_3_ce0 = 1'b1;
    end else begin
        conv2_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_4_ce0 = 1'b1;
    end else begin
        conv2_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_5_ce0 = 1'b1;
    end else begin
        conv2_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_6_ce0 = 1'b1;
    end else begin
        conv2_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_0_7_ce0 = 1'b1;
    end else begin
        conv2_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_0_ce0 = 1'b1;
    end else begin
        conv2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_1_ce0 = 1'b1;
    end else begin
        conv2_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_2_ce0 = 1'b1;
    end else begin
        conv2_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_3_ce0 = 1'b1;
    end else begin
        conv2_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_4_ce0 = 1'b1;
    end else begin
        conv2_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_5_ce0 = 1'b1;
    end else begin
        conv2_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_6_ce0 = 1'b1;
    end else begin
        conv2_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_1_7_ce0 = 1'b1;
    end else begin
        conv2_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_0_ce0 = 1'b1;
    end else begin
        conv2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_1_ce0 = 1'b1;
    end else begin
        conv2_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_2_ce0 = 1'b1;
    end else begin
        conv2_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_3_ce0 = 1'b1;
    end else begin
        conv2_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_4_ce0 = 1'b1;
    end else begin
        conv2_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_5_ce0 = 1'b1;
    end else begin
        conv2_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_6_ce0 = 1'b1;
    end else begin
        conv2_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_2_7_ce0 = 1'b1;
    end else begin
        conv2_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_0_ce0 = 1'b1;
    end else begin
        conv2_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_1_ce0 = 1'b1;
    end else begin
        conv2_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_2_ce0 = 1'b1;
    end else begin
        conv2_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_3_ce0 = 1'b1;
    end else begin
        conv2_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_4_ce0 = 1'b1;
    end else begin
        conv2_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_5_ce0 = 1'b1;
    end else begin
        conv2_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_6_ce0 = 1'b1;
    end else begin
        conv2_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_3_7_ce0 = 1'b1;
    end else begin
        conv2_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_0_ce0 = 1'b1;
    end else begin
        conv2_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_1_ce0 = 1'b1;
    end else begin
        conv2_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_2_ce0 = 1'b1;
    end else begin
        conv2_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_3_ce0 = 1'b1;
    end else begin
        conv2_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_4_ce0 = 1'b1;
    end else begin
        conv2_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_5_ce0 = 1'b1;
    end else begin
        conv2_4_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_6_ce0 = 1'b1;
    end else begin
        conv2_4_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_4_7_ce0 = 1'b1;
    end else begin
        conv2_4_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_0_ce0 = 1'b1;
    end else begin
        conv2_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_1_ce0 = 1'b1;
    end else begin
        conv2_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_2_ce0 = 1'b1;
    end else begin
        conv2_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_3_ce0 = 1'b1;
    end else begin
        conv2_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_4_ce0 = 1'b1;
    end else begin
        conv2_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_5_ce0 = 1'b1;
    end else begin
        conv2_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_6_ce0 = 1'b1;
    end else begin
        conv2_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_5_7_ce0 = 1'b1;
    end else begin
        conv2_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_0_ce0 = 1'b1;
    end else begin
        conv2_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_1_ce0 = 1'b1;
    end else begin
        conv2_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_2_ce0 = 1'b1;
    end else begin
        conv2_6_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_3_ce0 = 1'b1;
    end else begin
        conv2_6_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_4_ce0 = 1'b1;
    end else begin
        conv2_6_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_5_ce0 = 1'b1;
    end else begin
        conv2_6_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_6_ce0 = 1'b1;
    end else begin
        conv2_6_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_6_7_ce0 = 1'b1;
    end else begin
        conv2_6_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_0_ce0 = 1'b1;
    end else begin
        conv2_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_1_ce0 = 1'b1;
    end else begin
        conv2_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_2_ce0 = 1'b1;
    end else begin
        conv2_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_3_ce0 = 1'b1;
    end else begin
        conv2_7_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_4_ce0 = 1'b1;
    end else begin
        conv2_7_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_5_ce0 = 1'b1;
    end else begin
        conv2_7_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_6_ce0 = 1'b1;
    end else begin
        conv2_7_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_7_7_ce0 = 1'b1;
    end else begin
        conv2_7_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_1_ce0 = 1'b1;
    end else begin
        conv2_pooled_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_1_we0 = 1'b1;
    end else begin
        conv2_pooled_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_2_ce0 = 1'b1;
    end else begin
        conv2_pooled_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_2_we0 = 1'b1;
    end else begin
        conv2_pooled_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_3_ce0 = 1'b1;
    end else begin
        conv2_pooled_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_3_we0 = 1'b1;
    end else begin
        conv2_pooled_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_ce0 = 1'b1;
    end else begin
        conv2_pooled_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_pooled_we0 = 1'b1;
    end else begin
        conv2_pooled_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_2_fu_1102_p2 = (ap_sig_allocacmp_indvar_flatten77_load + 8'd1);

assign add_ln130_fu_1114_p2 = (ap_sig_allocacmp_m_1_load + 6'd1);

assign add_ln131_fu_1230_p2 = (select_ln130_fu_1126_p3 + 3'd1);

assign add_ln141_fu_1261_p2 = (tmp_s_fu_1251_p3 + zext_ln141_fu_1258_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv2_0_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_0_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_1_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_2_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_3_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_4_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_5_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_6_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_0_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_1_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_2_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_3_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_4_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_5_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_6_address0 = zext_ln130_fu_1162_p1;

assign conv2_7_7_address0 = zext_ln130_fu_1162_p1;

assign conv2_pooled_1_address0 = zext_ln141_1_fu_1267_p1;

assign conv2_pooled_1_d0 = (or_ln137_27_fu_1465_p2 | or_ln137_26_fu_1459_p2);

assign conv2_pooled_2_address0 = zext_ln141_1_fu_1267_p1;

assign conv2_pooled_2_d0 = (or_ln137_30_fu_1564_p2 | or_ln137_29_fu_1558_p2);

assign conv2_pooled_3_address0 = zext_ln141_1_fu_1267_p1;

assign conv2_pooled_3_d0 = (or_ln137_33_fu_1663_p2 | or_ln137_32_fu_1657_p2);

assign conv2_pooled_address0 = zext_ln141_1_fu_1267_p1;

assign conv2_pooled_d0 = (or_ln137_fu_1360_p2 | or_ln137_24_fu_1366_p2);

assign empty_35_fu_1275_p2 = select_ln130_reg_1700 << 3'd1;

assign icmp_ln130_fu_1096_p2 = ((ap_sig_allocacmp_indvar_flatten77_load == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1120_p2 = ((ap_sig_allocacmp_x_load == 3'd4) ? 1'b1 : 1'b0);

assign or_ln137_24_fu_1366_p2 = (tmp_60_fu_1340_p9 | tmp_59_fu_1320_p9);

assign or_ln137_26_fu_1459_p2 = (tmp_61_fu_1399_p9 | max_17_fu_1379_p9);

assign or_ln137_27_fu_1465_p2 = (tmp_63_fu_1439_p9 | tmp_62_fu_1419_p9);

assign or_ln137_29_fu_1558_p2 = (tmp_64_fu_1498_p9 | max_19_fu_1478_p9);

assign or_ln137_30_fu_1564_p2 = (tmp_66_fu_1538_p9 | tmp_65_fu_1518_p9);

assign or_ln137_32_fu_1657_p2 = (tmp_67_fu_1597_p9 | max_21_fu_1577_p9);

assign or_ln137_33_fu_1663_p2 = (tmp_69_fu_1637_p9 | tmp_68_fu_1617_p9);

assign or_ln137_fu_1360_p2 = (tmp_58_fu_1300_p9 | max_fu_1280_p9);

assign select_ln130_2_fu_1134_p3 = ((icmp_ln131_fu_1120_p2[0:0] == 1'b1) ? add_ln130_fu_1114_p2 : ap_sig_allocacmp_m_1_load);

assign select_ln130_4_fu_1154_p3 = ((icmp_ln131_fu_1120_p2[0:0] == 1'b1) ? trunc_ln130_fu_1146_p1 : trunc_ln130_1_fu_1150_p1);

assign select_ln130_fu_1126_p3 = ((icmp_ln131_fu_1120_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_x_load);

assign tmp_s_fu_1251_p3 = {{trunc_ln141_reg_1706}, {2'd0}};

assign trunc_ln130_1_fu_1150_p1 = ap_sig_allocacmp_m_1_load[4:0];

assign trunc_ln130_fu_1146_p1 = add_ln130_fu_1114_p2[4:0];

assign trunc_ln141_fu_1142_p1 = select_ln130_2_fu_1134_p3[4:0];

assign zext_ln130_fu_1162_p1 = select_ln130_4_fu_1154_p3;

assign zext_ln141_1_fu_1267_p1 = add_ln141_fu_1261_p2;

assign zext_ln141_fu_1258_p1 = select_ln130_reg_1700;

endmodule //dut_bnn_xcel_Pipeline_m_loop_x_loop
