-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_dut_Pipeline_VITIS_LOOP_26_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_empty_n : IN STD_LOGIC;
    strm_in_read : OUT STD_LOGIC;
    input_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_0_ce0 : OUT STD_LOGIC;
    input_0_we0 : OUT STD_LOGIC;
    input_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    input_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    input_0_ce1 : OUT STD_LOGIC;
    input_0_we1 : OUT STD_LOGIC;
    input_0_d1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dut_dut_Pipeline_VITIS_LOOP_26_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln26_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal strm_in_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln26_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_21_fu_452_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_21_reg_1729 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln714_fu_456_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln714_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal div_udiv_fu_460_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal div_udiv_reg_1741 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_470_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1746 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_1754 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1759 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1779 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1789 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_1794 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1799 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1804 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1809 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_1819 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1824 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1834 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_1839 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1844 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1849 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1854 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1859 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1864 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_1869 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1874 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_1879 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1884 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1889 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_1_fu_801_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln30_1_reg_1899 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal or_ln30_2_fu_919_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln30_2_reg_1905 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal or_ln30_3_fu_1177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln30_3_reg_1915 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal div_udiv_25_reg_1932 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln29_2_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_6_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_3_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln29_7_fu_836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_8_fu_870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln29_9_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_4_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln29_10_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_11_fu_988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln29_12_fu_1022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_13_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln29_14_fu_1090_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_15_fu_1124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln29_16_fu_1158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_fu_1163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln29_5_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_1_fu_1206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln29_17_fu_1241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_18_fu_1275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln29_19_fu_1309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_20_fu_1343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal zext_ln29_21_fu_1377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_22_fu_1411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal zext_ln29_23_fu_1445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_24_fu_1479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal zext_ln29_25_fu_1513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_26_fu_1547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal zext_ln29_27_fu_1581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_28_fu_1615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal zext_ln29_29_fu_1649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_30_fu_1682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln29_31_fu_1706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_140 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_fu_438_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcount_fu_144 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln28_fu_780_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal or_ln29_fu_478_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln30_fu_489_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_fu_504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_2_fu_519_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_4_fu_537_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_1_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_1_fu_806_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_4_fu_812_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_822_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_5_fu_830_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_2_fu_841_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_5_fu_846_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_856_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_6_fu_864_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_3_fu_875_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_6_fu_880_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_890_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_7_fu_898_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_2_fu_909_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_4_fu_924_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_8_fu_930_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_940_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_8_fu_948_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_5_fu_959_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_9_fu_964_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_974_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_9_fu_982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_6_fu_993_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_s_fu_998_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_1008_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_10_fu_1016_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_7_fu_1027_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_1_fu_1032_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_18_fu_1042_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_11_fu_1050_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_8_fu_1061_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_3_fu_1066_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_1076_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_12_fu_1084_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_9_fu_1095_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_7_fu_1100_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_22_fu_1110_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_13_fu_1118_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_10_fu_1129_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_10_fu_1134_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_24_fu_1144_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_14_fu_1152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_3_fu_1167_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_11_fu_1182_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_11_fu_1188_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_27_fu_1198_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_12_fu_1211_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_12_fu_1217_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_1227_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_15_fu_1235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_13_fu_1246_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_13_fu_1251_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_31_fu_1261_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_16_fu_1269_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_14_fu_1280_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_14_fu_1285_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_33_fu_1295_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_17_fu_1303_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_15_fu_1314_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_15_fu_1319_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_35_fu_1329_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_18_fu_1337_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_16_fu_1348_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_16_fu_1353_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_37_fu_1363_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_19_fu_1371_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_17_fu_1382_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_17_fu_1387_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_39_fu_1397_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_20_fu_1405_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_18_fu_1416_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_18_fu_1421_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_41_fu_1431_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_21_fu_1439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_19_fu_1450_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_19_fu_1455_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_fu_1465_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_22_fu_1473_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_20_fu_1484_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_20_fu_1489_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_45_fu_1499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_23_fu_1507_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_21_fu_1518_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_21_fu_1523_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_fu_1533_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_24_fu_1541_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_22_fu_1552_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_22_fu_1557_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_1567_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_25_fu_1575_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_23_fu_1586_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_23_fu_1591_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_51_fu_1601_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_26_fu_1609_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_24_fu_1620_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_24_fu_1625_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_fu_1635_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_27_fu_1643_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln30_25_fu_1654_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_1669_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_28_fu_1676_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_udiv_31_fu_1687_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_57_fu_1692_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln29_29_fu_1700_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dut_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    bitcount_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bitcount_fu_144 <= ap_const_lv9_0;
            elsif (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                bitcount_fu_144 <= add_ln28_fu_780_p2;
            end if; 
        end if;
    end process;

    i_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln26_fu_432_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_140 <= i_2_fu_438_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_140 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                div_udiv_25_reg_1932 <= add_ln30_25_fu_1654_p2(7 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                div_udiv_reg_1741 <= bitcount_fu_144(7 downto 4);
                empty_21_reg_1729 <= empty_21_fu_452_p1;
                tmp_10_reg_1774 <= strm_in_dout(7 downto 7);
                tmp_11_reg_1779 <= strm_in_dout(8 downto 8);
                tmp_13_reg_1784 <= strm_in_dout(9 downto 9);
                tmp_15_reg_1789 <= strm_in_dout(10 downto 10);
                tmp_17_reg_1794 <= strm_in_dout(11 downto 11);
                tmp_19_reg_1799 <= strm_in_dout(12 downto 12);
                tmp_21_reg_1804 <= strm_in_dout(13 downto 13);
                tmp_23_reg_1809 <= strm_in_dout(14 downto 14);
                tmp_25_reg_1814 <= strm_in_dout(15 downto 15);
                tmp_26_reg_1819 <= strm_in_dout(16 downto 16);
                tmp_28_reg_1824 <= strm_in_dout(17 downto 17);
                tmp_30_reg_1829 <= strm_in_dout(18 downto 18);
                tmp_32_reg_1834 <= strm_in_dout(19 downto 19);
                tmp_34_reg_1839 <= strm_in_dout(20 downto 20);
                tmp_36_reg_1844 <= strm_in_dout(21 downto 21);
                tmp_38_reg_1849 <= strm_in_dout(22 downto 22);
                tmp_3_reg_1754 <= strm_in_dout(3 downto 3);
                tmp_40_reg_1854 <= strm_in_dout(23 downto 23);
                tmp_42_reg_1859 <= strm_in_dout(24 downto 24);
                tmp_44_reg_1864 <= strm_in_dout(25 downto 25);
                tmp_46_reg_1869 <= strm_in_dout(26 downto 26);
                tmp_48_reg_1874 <= strm_in_dout(27 downto 27);
                tmp_4_reg_1759 <= strm_in_dout(4 downto 4);
                tmp_50_reg_1879 <= strm_in_dout(28 downto 28);
                tmp_52_reg_1884 <= strm_in_dout(29 downto 29);
                tmp_54_reg_1889 <= strm_in_dout(30 downto 30);
                tmp_56_reg_1894 <= strm_in_dout(31 downto 31);
                tmp_6_reg_1764 <= strm_in_dout(5 downto 5);
                tmp_8_reg_1769 <= strm_in_dout(6 downto 6);
                    tmp_s_reg_1746(7 downto 4) <= tmp_s_fu_470_p3(7 downto 4);
                trunc_ln714_reg_1736 <= trunc_ln714_fu_456_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln26_reg_1725 <= icmp_ln26_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    or_ln30_1_reg_1899(7 downto 2) <= or_ln30_1_fu_801_p2(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    or_ln30_2_reg_1905(7 downto 3) <= or_ln30_2_fu_919_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                    or_ln30_3_reg_1915(7 downto 4) <= or_ln30_3_fu_1177_p2(7 downto 4);
            end if;
        end if;
    end process;
    tmp_s_reg_1746(3 downto 0) <= "0000";
    or_ln30_1_reg_1899(1 downto 0) <= "11";
    or_ln30_2_reg_1905(2 downto 0) <= "111";
    or_ln30_3_reg_1915(3 downto 0) <= "1111";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter0_stage0, ap_block_pp0_stage15_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln28_fu_780_p2 <= std_logic_vector(unsigned(bitcount_fu_144) + unsigned(ap_const_lv9_20));
    add_ln30_10_fu_1129_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_7));
    add_ln30_11_fu_1182_p2 <= std_logic_vector(unsigned(or_ln30_3_fu_1177_p2) + unsigned(ap_const_lv8_1));
    add_ln30_12_fu_1211_p2 <= std_logic_vector(unsigned(or_ln30_3_fu_1177_p2) + unsigned(ap_const_lv8_2));
    add_ln30_13_fu_1246_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_3));
    add_ln30_14_fu_1280_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_4));
    add_ln30_15_fu_1314_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_5));
    add_ln30_16_fu_1348_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_6));
    add_ln30_17_fu_1382_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_7));
    add_ln30_18_fu_1416_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_8));
    add_ln30_19_fu_1450_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_9));
    add_ln30_1_fu_806_p2 <= std_logic_vector(unsigned(or_ln30_1_fu_801_p2) + unsigned(ap_const_lv8_1));
    add_ln30_20_fu_1484_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_A));
    add_ln30_21_fu_1518_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_B));
    add_ln30_22_fu_1552_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_C));
    add_ln30_23_fu_1586_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_D));
    add_ln30_24_fu_1620_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_E));
    add_ln30_25_fu_1654_p2 <= std_logic_vector(unsigned(or_ln30_3_reg_1915) + unsigned(ap_const_lv8_F));
    add_ln30_2_fu_841_p2 <= std_logic_vector(unsigned(or_ln30_1_reg_1899) + unsigned(ap_const_lv8_2));
    add_ln30_3_fu_875_p2 <= std_logic_vector(unsigned(or_ln30_1_reg_1899) + unsigned(ap_const_lv8_3));
    add_ln30_4_fu_924_p2 <= std_logic_vector(unsigned(or_ln30_2_fu_919_p2) + unsigned(ap_const_lv8_1));
    add_ln30_5_fu_959_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_2));
    add_ln30_6_fu_993_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_3));
    add_ln30_7_fu_1027_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_4));
    add_ln30_8_fu_1061_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_5));
    add_ln30_9_fu_1095_p2 <= std_logic_vector(unsigned(or_ln30_2_reg_1905) + unsigned(ap_const_lv8_6));
    add_ln30_fu_504_p2 <= std_logic_vector(unsigned(or_ln30_fu_489_p2) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, strm_in_empty_n, icmp_ln26_reg_1725)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (strm_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, strm_in_empty_n, icmp_ln26_reg_1725)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (strm_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(strm_in_empty_n, icmp_ln26_reg_1725)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (strm_in_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln26_fu_432_p2)
    begin
        if (((icmp_ln26_fu_432_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_140, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_140;
        end if; 
    end process;

    div_udiv_10_fu_1134_p4 <= add_ln30_10_fu_1129_p2(7 downto 4);
    div_udiv_11_fu_1188_p4 <= add_ln30_11_fu_1182_p2(7 downto 4);
    div_udiv_12_fu_1217_p4 <= add_ln30_12_fu_1211_p2(7 downto 4);
    div_udiv_13_fu_1251_p4 <= add_ln30_13_fu_1246_p2(7 downto 4);
    div_udiv_14_fu_1285_p4 <= add_ln30_14_fu_1280_p2(7 downto 4);
    div_udiv_15_fu_1319_p4 <= add_ln30_15_fu_1314_p2(7 downto 4);
    div_udiv_16_fu_1353_p4 <= add_ln30_16_fu_1348_p2(7 downto 4);
    div_udiv_17_fu_1387_p4 <= add_ln30_17_fu_1382_p2(7 downto 4);
    div_udiv_18_fu_1421_p4 <= add_ln30_18_fu_1416_p2(7 downto 4);
    div_udiv_19_fu_1455_p4 <= add_ln30_19_fu_1450_p2(7 downto 4);
    div_udiv_1_fu_1032_p4 <= add_ln30_7_fu_1027_p2(7 downto 4);
    div_udiv_20_fu_1489_p4 <= add_ln30_20_fu_1484_p2(7 downto 4);
    div_udiv_21_fu_1523_p4 <= add_ln30_21_fu_1518_p2(7 downto 4);
    div_udiv_22_fu_1557_p4 <= add_ln30_22_fu_1552_p2(7 downto 4);
    div_udiv_23_fu_1591_p4 <= add_ln30_23_fu_1586_p2(7 downto 4);
    div_udiv_24_fu_1625_p4 <= add_ln30_24_fu_1620_p2(7 downto 4);
    div_udiv_2_fu_519_p4 <= add_ln30_fu_504_p2(7 downto 4);
    div_udiv_31_fu_1687_p2 <= (div_udiv_reg_1741 or ap_const_lv4_1);
    div_udiv_3_fu_1066_p4 <= add_ln30_8_fu_1061_p2(7 downto 4);
    div_udiv_4_fu_812_p4 <= add_ln30_1_fu_806_p2(7 downto 4);
    div_udiv_5_fu_846_p4 <= add_ln30_2_fu_841_p2(7 downto 4);
    div_udiv_6_fu_880_p4 <= add_ln30_3_fu_875_p2(7 downto 4);
    div_udiv_7_fu_1100_p4 <= add_ln30_9_fu_1095_p2(7 downto 4);
    div_udiv_8_fu_930_p4 <= add_ln30_4_fu_924_p2(7 downto 4);
    div_udiv_9_fu_964_p4 <= add_ln30_5_fu_959_p2(7 downto 4);
    div_udiv_fu_460_p4 <= bitcount_fu_144(7 downto 4);
    div_udiv_s_fu_998_p4 <= add_ln30_6_fu_993_p2(7 downto 4);
    empty_21_fu_452_p1 <= bitcount_fu_144(8 - 1 downto 0);
    i_2_fu_438_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv4_1));
    icmp_ln26_fu_432_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv4_8) else "0";

    input_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, zext_ln29_6_fu_543_p1, ap_block_pp0_stage2, zext_ln29_7_fu_836_p1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, zext_ln29_9_fu_904_p1, ap_block_pp0_stage4, zext_ln29_10_fu_954_p1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, zext_ln29_12_fu_1022_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln29_14_fu_1090_p1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, zext_ln29_16_fu_1158_p1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, zext_ln29_5_fu_1172_p1, ap_block_pp0_stage9, zext_ln29_17_fu_1241_p1, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, zext_ln29_19_fu_1309_p1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, zext_ln29_21_fu_1377_p1, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, zext_ln29_23_fu_1445_p1, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, zext_ln29_25_fu_1513_p1, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, zext_ln29_27_fu_1581_p1, ap_block_pp0_stage15, zext_ln29_29_fu_1649_p1, ap_block_pp0_stage0, zext_ln29_31_fu_1706_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_0_address0 <= zext_ln29_31_fu_1706_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            input_0_address0 <= zext_ln29_29_fu_1649_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            input_0_address0 <= zext_ln29_27_fu_1581_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            input_0_address0 <= zext_ln29_25_fu_1513_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            input_0_address0 <= zext_ln29_23_fu_1445_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            input_0_address0 <= zext_ln29_21_fu_1377_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            input_0_address0 <= zext_ln29_19_fu_1309_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            input_0_address0 <= zext_ln29_17_fu_1241_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            input_0_address0 <= zext_ln29_5_fu_1172_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            input_0_address0 <= zext_ln29_16_fu_1158_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_0_address0 <= zext_ln29_14_fu_1090_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            input_0_address0 <= zext_ln29_12_fu_1022_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_0_address0 <= zext_ln29_10_fu_954_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            input_0_address0 <= zext_ln29_9_fu_904_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            input_0_address0 <= zext_ln29_7_fu_836_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            input_0_address0 <= zext_ln29_6_fu_543_p1(8 - 1 downto 0);
        else 
            input_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    input_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, zext_ln29_2_fu_484_p1, zext_ln29_3_fu_796_p1, ap_block_pp0_stage2, zext_ln29_8_fu_870_p1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, zext_ln29_4_fu_914_p1, ap_block_pp0_stage4, zext_ln29_11_fu_988_p1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, zext_ln29_13_fu_1056_p1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, zext_ln29_15_fu_1124_p1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, zext_ln29_fu_1163_p1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, zext_ln29_1_fu_1206_p1, ap_block_pp0_stage9, zext_ln29_18_fu_1275_p1, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, zext_ln29_20_fu_1343_p1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, zext_ln29_22_fu_1411_p1, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, zext_ln29_24_fu_1479_p1, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, zext_ln29_26_fu_1547_p1, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, zext_ln29_28_fu_1615_p1, ap_block_pp0_stage15, zext_ln29_30_fu_1682_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_0_address1 <= zext_ln29_30_fu_1682_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            input_0_address1 <= zext_ln29_28_fu_1615_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            input_0_address1 <= zext_ln29_26_fu_1547_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            input_0_address1 <= zext_ln29_24_fu_1479_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            input_0_address1 <= zext_ln29_22_fu_1411_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            input_0_address1 <= zext_ln29_20_fu_1343_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            input_0_address1 <= zext_ln29_18_fu_1275_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            input_0_address1 <= zext_ln29_1_fu_1206_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            input_0_address1 <= zext_ln29_fu_1163_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            input_0_address1 <= zext_ln29_15_fu_1124_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_0_address1 <= zext_ln29_13_fu_1056_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            input_0_address1 <= zext_ln29_11_fu_988_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_0_address1 <= zext_ln29_4_fu_914_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            input_0_address1 <= zext_ln29_8_fu_870_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            input_0_address1 <= zext_ln29_3_fu_796_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            input_0_address1 <= zext_ln29_2_fu_484_p1(8 - 1 downto 0);
        else 
            input_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    input_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_ce0 <= ap_const_logic_1;
        else 
            input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_ce1 <= ap_const_logic_1;
        else 
            input_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, strm_in_dout, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, tmp_4_reg_1759, tmp_8_reg_1769, tmp_11_reg_1779, tmp_15_reg_1789, tmp_19_reg_1799, tmp_23_reg_1809, tmp_25_reg_1814, tmp_28_reg_1824, tmp_32_reg_1834, tmp_36_reg_1844, tmp_40_reg_1854, tmp_44_reg_1864, tmp_48_reg_1874, tmp_52_reg_1884, tmp_56_reg_1894, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_0_d0 <= tmp_56_reg_1894;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            input_0_d0 <= tmp_52_reg_1884;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            input_0_d0 <= tmp_48_reg_1874;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            input_0_d0 <= tmp_44_reg_1864;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            input_0_d0 <= tmp_40_reg_1854;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            input_0_d0 <= tmp_36_reg_1844;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            input_0_d0 <= tmp_32_reg_1834;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            input_0_d0 <= tmp_28_reg_1824;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            input_0_d0 <= tmp_25_reg_1814;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            input_0_d0 <= tmp_23_reg_1809;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_0_d0 <= tmp_19_reg_1799;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            input_0_d0 <= tmp_15_reg_1789;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_0_d0 <= tmp_11_reg_1779;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            input_0_d0 <= tmp_8_reg_1769;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            input_0_d0 <= tmp_4_reg_1759;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            input_0_d0 <= strm_in_dout(2 downto 2);
        else 
            input_0_d0 <= "X";
        end if; 
    end process;


    input_0_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, strm_in_dout, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, trunc_ln714_reg_1736, tmp_3_reg_1754, tmp_6_reg_1764, tmp_10_reg_1774, tmp_13_reg_1784, tmp_17_reg_1794, tmp_21_reg_1804, tmp_26_reg_1819, tmp_30_reg_1829, tmp_34_reg_1839, tmp_38_reg_1849, tmp_42_reg_1859, tmp_46_reg_1869, tmp_50_reg_1879, tmp_54_reg_1889, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_0_d1 <= tmp_54_reg_1889;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            input_0_d1 <= tmp_50_reg_1879;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            input_0_d1 <= tmp_46_reg_1869;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            input_0_d1 <= tmp_42_reg_1859;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            input_0_d1 <= tmp_38_reg_1849;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            input_0_d1 <= tmp_34_reg_1839;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            input_0_d1 <= tmp_30_reg_1829;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            input_0_d1 <= tmp_26_reg_1819;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            input_0_d1 <= trunc_ln714_reg_1736;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            input_0_d1 <= tmp_21_reg_1804;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            input_0_d1 <= tmp_17_reg_1794;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            input_0_d1 <= tmp_13_reg_1784;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            input_0_d1 <= tmp_10_reg_1774;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            input_0_d1 <= tmp_6_reg_1764;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            input_0_d1 <= tmp_3_reg_1754;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            input_0_d1 <= strm_in_dout(1 downto 1);
        else 
            input_0_d1 <= "X";
        end if; 
    end process;


    input_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, icmp_ln26_reg_1725, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_we0 <= ap_const_logic_1;
        else 
            input_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage1, icmp_ln26_reg_1725, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_we1 <= ap_const_logic_1;
        else 
            input_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln29_10_fu_1016_p2 <= (tmp_16_fu_1008_p3 or ap_const_lv8_A);
    or_ln29_11_fu_1050_p2 <= (tmp_18_fu_1042_p3 or ap_const_lv8_B);
    or_ln29_12_fu_1084_p2 <= (tmp_20_fu_1076_p3 or ap_const_lv8_C);
    or_ln29_13_fu_1118_p2 <= (tmp_22_fu_1110_p3 or ap_const_lv8_D);
    or_ln29_14_fu_1152_p2 <= (tmp_24_fu_1144_p3 or ap_const_lv8_E);
    or_ln29_15_fu_1235_p2 <= (tmp_29_fu_1227_p3 or ap_const_lv8_1);
    or_ln29_16_fu_1269_p2 <= (tmp_31_fu_1261_p3 or ap_const_lv8_2);
    or_ln29_17_fu_1303_p2 <= (tmp_33_fu_1295_p3 or ap_const_lv8_3);
    or_ln29_18_fu_1337_p2 <= (tmp_35_fu_1329_p3 or ap_const_lv8_4);
    or_ln29_19_fu_1371_p2 <= (tmp_37_fu_1363_p3 or ap_const_lv8_5);
    or_ln29_1_fu_791_p2 <= (tmp_s_reg_1746 or ap_const_lv8_3);
    or_ln29_20_fu_1405_p2 <= (tmp_39_fu_1397_p3 or ap_const_lv8_6);
    or_ln29_21_fu_1439_p2 <= (tmp_41_fu_1431_p3 or ap_const_lv8_7);
    or_ln29_22_fu_1473_p2 <= (tmp_43_fu_1465_p3 or ap_const_lv8_8);
    or_ln29_23_fu_1507_p2 <= (tmp_45_fu_1499_p3 or ap_const_lv8_9);
    or_ln29_24_fu_1541_p2 <= (tmp_47_fu_1533_p3 or ap_const_lv8_A);
    or_ln29_25_fu_1575_p2 <= (tmp_49_fu_1567_p3 or ap_const_lv8_B);
    or_ln29_26_fu_1609_p2 <= (tmp_51_fu_1601_p3 or ap_const_lv8_C);
    or_ln29_27_fu_1643_p2 <= (tmp_53_fu_1635_p3 or ap_const_lv8_D);
    or_ln29_28_fu_1676_p2 <= (tmp_55_fu_1669_p3 or ap_const_lv8_E);
    or_ln29_29_fu_1700_p2 <= (tmp_57_fu_1692_p3 or ap_const_lv8_F);
    or_ln29_2_fu_909_p2 <= (tmp_s_reg_1746 or ap_const_lv8_7);
    or_ln29_3_fu_1167_p2 <= (tmp_s_reg_1746 or ap_const_lv8_F);
    or_ln29_4_fu_537_p2 <= (tmp_2_fu_529_p3 or ap_const_lv8_2);
    or_ln29_5_fu_830_p2 <= (tmp_5_fu_822_p3 or ap_const_lv8_4);
    or_ln29_6_fu_864_p2 <= (tmp_7_fu_856_p3 or ap_const_lv8_5);
    or_ln29_7_fu_898_p2 <= (tmp_9_fu_890_p3 or ap_const_lv8_6);
    or_ln29_8_fu_948_p2 <= (tmp_12_fu_940_p3 or ap_const_lv8_8);
    or_ln29_9_fu_982_p2 <= (tmp_14_fu_974_p3 or ap_const_lv8_9);
    or_ln29_fu_478_p2 <= (tmp_s_fu_470_p3 or ap_const_lv8_1);
    or_ln30_1_fu_801_p2 <= (empty_21_reg_1729 or ap_const_lv8_3);
    or_ln30_2_fu_919_p2 <= (empty_21_reg_1729 or ap_const_lv8_7);
    or_ln30_3_fu_1177_p2 <= (empty_21_reg_1729 or ap_const_lv8_F);
    or_ln30_fu_489_p2 <= (empty_21_fu_452_p1 or ap_const_lv8_1);

    strm_in_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, strm_in_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln26_reg_1725)
    begin
        if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            strm_in_blk_n <= strm_in_empty_n;
        else 
            strm_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln26_reg_1725, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln26_reg_1725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            strm_in_read <= ap_const_logic_1;
        else 
            strm_in_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_fu_940_p3 <= (div_udiv_8_fu_930_p4 & ap_const_lv4_0);
    tmp_14_fu_974_p3 <= (div_udiv_9_fu_964_p4 & ap_const_lv4_0);
    tmp_16_fu_1008_p3 <= (div_udiv_s_fu_998_p4 & ap_const_lv4_0);
    tmp_18_fu_1042_p3 <= (div_udiv_1_fu_1032_p4 & ap_const_lv4_0);
    tmp_20_fu_1076_p3 <= (div_udiv_3_fu_1066_p4 & ap_const_lv4_0);
    tmp_22_fu_1110_p3 <= (div_udiv_7_fu_1100_p4 & ap_const_lv4_0);
    tmp_24_fu_1144_p3 <= (div_udiv_10_fu_1134_p4 & ap_const_lv4_0);
    tmp_27_fu_1198_p3 <= (div_udiv_11_fu_1188_p4 & ap_const_lv4_0);
    tmp_29_fu_1227_p3 <= (div_udiv_12_fu_1217_p4 & ap_const_lv4_0);
    tmp_2_fu_529_p3 <= (div_udiv_2_fu_519_p4 & ap_const_lv4_0);
    tmp_31_fu_1261_p3 <= (div_udiv_13_fu_1251_p4 & ap_const_lv4_0);
    tmp_33_fu_1295_p3 <= (div_udiv_14_fu_1285_p4 & ap_const_lv4_0);
    tmp_35_fu_1329_p3 <= (div_udiv_15_fu_1319_p4 & ap_const_lv4_0);
    tmp_37_fu_1363_p3 <= (div_udiv_16_fu_1353_p4 & ap_const_lv4_0);
    tmp_39_fu_1397_p3 <= (div_udiv_17_fu_1387_p4 & ap_const_lv4_0);
    tmp_41_fu_1431_p3 <= (div_udiv_18_fu_1421_p4 & ap_const_lv4_0);
    tmp_43_fu_1465_p3 <= (div_udiv_19_fu_1455_p4 & ap_const_lv4_0);
    tmp_45_fu_1499_p3 <= (div_udiv_20_fu_1489_p4 & ap_const_lv4_0);
    tmp_47_fu_1533_p3 <= (div_udiv_21_fu_1523_p4 & ap_const_lv4_0);
    tmp_49_fu_1567_p3 <= (div_udiv_22_fu_1557_p4 & ap_const_lv4_0);
    tmp_51_fu_1601_p3 <= (div_udiv_23_fu_1591_p4 & ap_const_lv4_0);
    tmp_53_fu_1635_p3 <= (div_udiv_24_fu_1625_p4 & ap_const_lv4_0);
    tmp_55_fu_1669_p3 <= (div_udiv_25_reg_1932 & ap_const_lv4_0);
    tmp_57_fu_1692_p3 <= (div_udiv_31_fu_1687_p2 & ap_const_lv4_0);
    tmp_5_fu_822_p3 <= (div_udiv_4_fu_812_p4 & ap_const_lv4_0);
    tmp_7_fu_856_p3 <= (div_udiv_5_fu_846_p4 & ap_const_lv4_0);
    tmp_9_fu_890_p3 <= (div_udiv_6_fu_880_p4 & ap_const_lv4_0);
    tmp_s_fu_470_p3 <= (div_udiv_fu_460_p4 & ap_const_lv4_0);
    trunc_ln714_fu_456_p1 <= strm_in_dout(1 - 1 downto 0);
    zext_ln29_10_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_8_fu_948_p2),64));
    zext_ln29_11_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_9_fu_982_p2),64));
    zext_ln29_12_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_10_fu_1016_p2),64));
    zext_ln29_13_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_11_fu_1050_p2),64));
    zext_ln29_14_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_12_fu_1084_p2),64));
    zext_ln29_15_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_13_fu_1118_p2),64));
    zext_ln29_16_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_14_fu_1152_p2),64));
    zext_ln29_17_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_15_fu_1235_p2),64));
    zext_ln29_18_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_16_fu_1269_p2),64));
    zext_ln29_19_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_17_fu_1303_p2),64));
    zext_ln29_1_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1198_p3),64));
    zext_ln29_20_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_18_fu_1337_p2),64));
    zext_ln29_21_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_19_fu_1371_p2),64));
    zext_ln29_22_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_20_fu_1405_p2),64));
    zext_ln29_23_fu_1445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_21_fu_1439_p2),64));
    zext_ln29_24_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_22_fu_1473_p2),64));
    zext_ln29_25_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_23_fu_1507_p2),64));
    zext_ln29_26_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_24_fu_1541_p2),64));
    zext_ln29_27_fu_1581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_25_fu_1575_p2),64));
    zext_ln29_28_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_26_fu_1609_p2),64));
    zext_ln29_29_fu_1649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_27_fu_1643_p2),64));
    zext_ln29_2_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_fu_478_p2),64));
    zext_ln29_30_fu_1682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_28_fu_1676_p2),64));
    zext_ln29_31_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_29_fu_1700_p2),64));
    zext_ln29_3_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_1_fu_791_p2),64));
    zext_ln29_4_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_2_fu_909_p2),64));
    zext_ln29_5_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_3_fu_1167_p2),64));
    zext_ln29_6_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_4_fu_537_p2),64));
    zext_ln29_7_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_5_fu_830_p2),64));
    zext_ln29_8_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_6_fu_864_p2),64));
    zext_ln29_9_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln29_7_fu_898_p2),64));
    zext_ln29_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_1746),64));
end behav;
