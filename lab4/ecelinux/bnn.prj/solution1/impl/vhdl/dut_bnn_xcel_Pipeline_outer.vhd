-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_bnn_xcel_Pipeline_outer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv2_pooled_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_ce0 : OUT STD_LOGIC;
    conv2_pooled_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_ce1 : OUT STD_LOGIC;
    conv2_pooled_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_ce2 : OUT STD_LOGIC;
    conv2_pooled_q2 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_ce3 : OUT STD_LOGIC;
    conv2_pooled_q3 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_1_ce0 : OUT STD_LOGIC;
    conv2_pooled_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_1_ce1 : OUT STD_LOGIC;
    conv2_pooled_1_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_1_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_1_ce2 : OUT STD_LOGIC;
    conv2_pooled_1_q2 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_1_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_1_ce3 : OUT STD_LOGIC;
    conv2_pooled_1_q3 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_2_ce0 : OUT STD_LOGIC;
    conv2_pooled_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_2_ce1 : OUT STD_LOGIC;
    conv2_pooled_2_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_2_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_2_ce2 : OUT STD_LOGIC;
    conv2_pooled_2_q2 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_2_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_2_ce3 : OUT STD_LOGIC;
    conv2_pooled_2_q3 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_3_ce0 : OUT STD_LOGIC;
    conv2_pooled_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_3_ce1 : OUT STD_LOGIC;
    conv2_pooled_3_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_3_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_3_ce2 : OUT STD_LOGIC;
    conv2_pooled_3_q2 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_3_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_3_ce3 : OUT STD_LOGIC;
    conv2_pooled_3_q3 : IN STD_LOGIC_VECTOR (0 downto 0);
    reshaped_out : OUT STD_LOGIC_VECTOR (511 downto 0);
    reshaped_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of dut_bnn_xcel_Pipeline_outer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv9_160 : STD_LOGIC_VECTOR (8 downto 0) := "101100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln154_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal c_reg_702 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln159_1_fu_313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln159_2_fu_327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_3_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_5_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_index_fu_70 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln154_fu_299_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c : STD_LOGIC_VECTOR (5 downto 0);
    signal reshaped_fu_74 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_2032_fu_669_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln154_fu_289_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_305_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln159_fu_321_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln159_1_fu_335_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln159_2_fu_349_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln154_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln158_fu_390_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_380_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_fu_395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_1_cast_fu_409_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2018_fu_399_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_6_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_fu_430_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2019_fu_420_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_7_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_3_cast_fu_448_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2020_fu_438_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_9_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_2_fu_377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln158_fu_469_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2021_fu_459_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_4_fu_475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_1_fu_489_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2022_fu_479_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_11_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_2_fu_507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2023_fu_497_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_12_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_7_cast_fu_525_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2024_fu_515_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_13_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_1_fu_374_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln158_1_fu_546_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2025_fu_536_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_8_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_9_cast_fu_566_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2026_fu_556_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_14_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln158_2_fu_587_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2027_fu_577_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_10_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_3_fu_607_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2028_fu_597_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_15_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_4_fu_625_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2029_fu_615_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_16_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_5_fu_643_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2030_fu_633_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_17_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln159_6_fu_661_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2031_fu_651_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln159_18_fu_665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dut_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    o_index_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln154_fu_293_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    o_index_fu_70 <= add_ln154_fu_299_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    o_index_fu_70 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c_reg_702 <= ap_sig_allocacmp_c;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                reshaped_fu_74 <= tmp_2032_fu_669_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln154_fu_299_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_c) + unsigned(ap_const_lv6_1));
    add_ln158_1_fu_546_p2 <= std_logic_vector(unsigned(zext_ln154_1_fu_374_p1) + unsigned(ap_const_lv9_120));
    add_ln158_2_fu_587_p2 <= std_logic_vector(unsigned(zext_ln154_1_fu_374_p1) + unsigned(ap_const_lv9_160));
    add_ln158_fu_469_p2 <= std_logic_vector(unsigned(zext_ln154_2_fu_377_p1) + unsigned(ap_const_lv8_A0));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln154_fu_293_p2)
    begin
        if (((icmp_ln154_fu_293_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, o_index_fu_70, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_c <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_c <= o_index_fu_70;
        end if; 
    end process;

    conv2_pooled_1_address0 <= zext_ln159_5_fu_355_p1(7 - 1 downto 0);
    conv2_pooled_1_address1 <= zext_ln159_3_fu_341_p1(7 - 1 downto 0);
    conv2_pooled_1_address2 <= zext_ln159_2_fu_327_p1(7 - 1 downto 0);
    conv2_pooled_1_address3 <= zext_ln159_1_fu_313_p1(7 - 1 downto 0);

    conv2_pooled_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_ce1 <= ap_const_logic_1;
        else 
            conv2_pooled_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_ce2 <= ap_const_logic_1;
        else 
            conv2_pooled_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_ce3 <= ap_const_logic_1;
        else 
            conv2_pooled_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_2_address0 <= zext_ln159_5_fu_355_p1(7 - 1 downto 0);
    conv2_pooled_2_address1 <= zext_ln159_3_fu_341_p1(7 - 1 downto 0);
    conv2_pooled_2_address2 <= zext_ln159_2_fu_327_p1(7 - 1 downto 0);
    conv2_pooled_2_address3 <= zext_ln159_1_fu_313_p1(7 - 1 downto 0);

    conv2_pooled_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_ce1 <= ap_const_logic_1;
        else 
            conv2_pooled_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_2_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_ce2 <= ap_const_logic_1;
        else 
            conv2_pooled_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_2_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_ce3 <= ap_const_logic_1;
        else 
            conv2_pooled_2_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_3_address0 <= zext_ln159_5_fu_355_p1(7 - 1 downto 0);
    conv2_pooled_3_address1 <= zext_ln159_3_fu_341_p1(7 - 1 downto 0);
    conv2_pooled_3_address2 <= zext_ln159_2_fu_327_p1(7 - 1 downto 0);
    conv2_pooled_3_address3 <= zext_ln159_1_fu_313_p1(7 - 1 downto 0);

    conv2_pooled_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_ce1 <= ap_const_logic_1;
        else 
            conv2_pooled_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_3_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_ce2 <= ap_const_logic_1;
        else 
            conv2_pooled_3_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_3_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_ce3 <= ap_const_logic_1;
        else 
            conv2_pooled_3_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_address0 <= zext_ln159_5_fu_355_p1(7 - 1 downto 0);
    conv2_pooled_address1 <= zext_ln159_3_fu_341_p1(7 - 1 downto 0);
    conv2_pooled_address2 <= zext_ln159_2_fu_327_p1(7 - 1 downto 0);
    conv2_pooled_address3 <= zext_ln159_1_fu_313_p1(7 - 1 downto 0);

    conv2_pooled_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_ce1 <= ap_const_logic_1;
        else 
            conv2_pooled_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_ce2 <= ap_const_logic_1;
        else 
            conv2_pooled_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_pooled_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_ce3 <= ap_const_logic_1;
        else 
            conv2_pooled_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln154_fu_293_p2 <= "1" when (ap_sig_allocacmp_c = ap_const_lv6_20) else "0";
    or_ln159_1_fu_335_p2 <= (tmp_s_fu_305_p3 or ap_const_lv7_2);
    or_ln159_2_fu_349_p2 <= (tmp_s_fu_305_p3 or ap_const_lv7_3);
    or_ln159_fu_321_p2 <= (tmp_s_fu_305_p3 or ap_const_lv7_1);
    reshaped_out <= reshaped_fu_74;

    reshaped_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln154_fu_293_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln154_fu_293_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            reshaped_out_ap_vld <= ap_const_logic_1;
        else 
            reshaped_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln159_1_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln159_1_cast_fu_409_p3),8));

        sext_ln159_2_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln158_fu_390_p2),8));

        sext_ln159_3_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln159_3_cast_fu_448_p3),9));

        sext_ln159_4_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln158_fu_469_p2),9));

        sext_ln159_5_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln159_1_cast_fu_409_p3),9));

        sext_ln159_6_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln158_fu_390_p2),9));

        sext_ln159_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln158_fu_390_p2),7));

    
    tmp_2018_fu_399_p4_proc : process(tmp_fu_380_p4, zext_ln159_fu_395_p1, conv2_pooled_q2)
    begin
        tmp_2018_fu_399_p4 <= tmp_fu_380_p4;
        if to_integer(unsigned(zext_ln159_fu_395_p1)) >= tmp_fu_380_p4'low and to_integer(unsigned(zext_ln159_fu_395_p1)) <= tmp_fu_380_p4'high then
            tmp_2018_fu_399_p4(to_integer(unsigned(zext_ln159_fu_395_p1))) <= conv2_pooled_q2(0);
        end if;
    end process;

    
    tmp_2019_fu_420_p4_proc : process(tmp_2018_fu_399_p4, zext_ln159_6_fu_416_p1, conv2_pooled_q1)
    begin
        tmp_2019_fu_420_p4 <= tmp_2018_fu_399_p4;
        if to_integer(unsigned(zext_ln159_6_fu_416_p1)) >= tmp_2018_fu_399_p4'low and to_integer(unsigned(zext_ln159_6_fu_416_p1)) <= tmp_2018_fu_399_p4'high then
            tmp_2019_fu_420_p4(to_integer(unsigned(zext_ln159_6_fu_416_p1))) <= conv2_pooled_q1(0);
        end if;
    end process;

    
    tmp_2020_fu_438_p4_proc : process(tmp_2019_fu_420_p4, zext_ln159_7_fu_434_p1, conv2_pooled_q0)
    begin
        tmp_2020_fu_438_p4 <= tmp_2019_fu_420_p4;
        if to_integer(unsigned(zext_ln159_7_fu_434_p1)) >= tmp_2019_fu_420_p4'low and to_integer(unsigned(zext_ln159_7_fu_434_p1)) <= tmp_2019_fu_420_p4'high then
            tmp_2020_fu_438_p4(to_integer(unsigned(zext_ln159_7_fu_434_p1))) <= conv2_pooled_q0(0);
        end if;
    end process;

    
    tmp_2021_fu_459_p4_proc : process(tmp_2020_fu_438_p4, zext_ln159_9_fu_455_p1, conv2_pooled_1_q3)
    begin
        tmp_2021_fu_459_p4 <= tmp_2020_fu_438_p4;
        if to_integer(unsigned(zext_ln159_9_fu_455_p1)) >= tmp_2020_fu_438_p4'low and to_integer(unsigned(zext_ln159_9_fu_455_p1)) <= tmp_2020_fu_438_p4'high then
            tmp_2021_fu_459_p4(to_integer(unsigned(zext_ln159_9_fu_455_p1))) <= conv2_pooled_1_q3(0);
        end if;
    end process;

    
    tmp_2022_fu_479_p4_proc : process(tmp_2021_fu_459_p4, zext_ln159_4_fu_475_p1, conv2_pooled_1_q2)
    begin
        tmp_2022_fu_479_p4 <= tmp_2021_fu_459_p4;
        if to_integer(unsigned(zext_ln159_4_fu_475_p1)) >= tmp_2021_fu_459_p4'low and to_integer(unsigned(zext_ln159_4_fu_475_p1)) <= tmp_2021_fu_459_p4'high then
            tmp_2022_fu_479_p4(to_integer(unsigned(zext_ln159_4_fu_475_p1))) <= conv2_pooled_1_q2(0);
        end if;
    end process;

    
    tmp_2023_fu_497_p4_proc : process(tmp_2022_fu_479_p4, zext_ln159_11_fu_493_p1, conv2_pooled_1_q1)
    begin
        tmp_2023_fu_497_p4 <= tmp_2022_fu_479_p4;
        if to_integer(unsigned(zext_ln159_11_fu_493_p1)) >= tmp_2022_fu_479_p4'low and to_integer(unsigned(zext_ln159_11_fu_493_p1)) <= tmp_2022_fu_479_p4'high then
            tmp_2023_fu_497_p4(to_integer(unsigned(zext_ln159_11_fu_493_p1))) <= conv2_pooled_1_q1(0);
        end if;
    end process;

    
    tmp_2024_fu_515_p4_proc : process(tmp_2023_fu_497_p4, zext_ln159_12_fu_511_p1, conv2_pooled_1_q0)
    begin
        tmp_2024_fu_515_p4 <= tmp_2023_fu_497_p4;
        if to_integer(unsigned(zext_ln159_12_fu_511_p1)) >= tmp_2023_fu_497_p4'low and to_integer(unsigned(zext_ln159_12_fu_511_p1)) <= tmp_2023_fu_497_p4'high then
            tmp_2024_fu_515_p4(to_integer(unsigned(zext_ln159_12_fu_511_p1))) <= conv2_pooled_1_q0(0);
        end if;
    end process;

    
    tmp_2025_fu_536_p4_proc : process(tmp_2024_fu_515_p4, zext_ln159_13_fu_532_p1, conv2_pooled_2_q3)
    begin
        tmp_2025_fu_536_p4 <= tmp_2024_fu_515_p4;
        if to_integer(unsigned(zext_ln159_13_fu_532_p1)) >= tmp_2024_fu_515_p4'low and to_integer(unsigned(zext_ln159_13_fu_532_p1)) <= tmp_2024_fu_515_p4'high then
            tmp_2025_fu_536_p4(to_integer(unsigned(zext_ln159_13_fu_532_p1))) <= conv2_pooled_2_q3(0);
        end if;
    end process;

    
    tmp_2026_fu_556_p4_proc : process(tmp_2025_fu_536_p4, zext_ln159_8_fu_552_p1, conv2_pooled_2_q2)
    begin
        tmp_2026_fu_556_p4 <= tmp_2025_fu_536_p4;
        if to_integer(unsigned(zext_ln159_8_fu_552_p1)) >= tmp_2025_fu_536_p4'low and to_integer(unsigned(zext_ln159_8_fu_552_p1)) <= tmp_2025_fu_536_p4'high then
            tmp_2026_fu_556_p4(to_integer(unsigned(zext_ln159_8_fu_552_p1))) <= conv2_pooled_2_q2(0);
        end if;
    end process;

    
    tmp_2027_fu_577_p4_proc : process(tmp_2026_fu_556_p4, zext_ln159_14_fu_573_p1, conv2_pooled_2_q1)
    begin
        tmp_2027_fu_577_p4 <= tmp_2026_fu_556_p4;
        if to_integer(unsigned(zext_ln159_14_fu_573_p1)) >= tmp_2026_fu_556_p4'low and to_integer(unsigned(zext_ln159_14_fu_573_p1)) <= tmp_2026_fu_556_p4'high then
            tmp_2027_fu_577_p4(to_integer(unsigned(zext_ln159_14_fu_573_p1))) <= conv2_pooled_2_q1(0);
        end if;
    end process;

    
    tmp_2028_fu_597_p4_proc : process(tmp_2027_fu_577_p4, zext_ln159_10_fu_593_p1, conv2_pooled_2_q0)
    begin
        tmp_2028_fu_597_p4 <= tmp_2027_fu_577_p4;
        if to_integer(unsigned(zext_ln159_10_fu_593_p1)) >= tmp_2027_fu_577_p4'low and to_integer(unsigned(zext_ln159_10_fu_593_p1)) <= tmp_2027_fu_577_p4'high then
            tmp_2028_fu_597_p4(to_integer(unsigned(zext_ln159_10_fu_593_p1))) <= conv2_pooled_2_q0(0);
        end if;
    end process;

    
    tmp_2029_fu_615_p4_proc : process(tmp_2028_fu_597_p4, zext_ln159_15_fu_611_p1, conv2_pooled_3_q3)
    begin
        tmp_2029_fu_615_p4 <= tmp_2028_fu_597_p4;
        if to_integer(unsigned(zext_ln159_15_fu_611_p1)) >= tmp_2028_fu_597_p4'low and to_integer(unsigned(zext_ln159_15_fu_611_p1)) <= tmp_2028_fu_597_p4'high then
            tmp_2029_fu_615_p4(to_integer(unsigned(zext_ln159_15_fu_611_p1))) <= conv2_pooled_3_q3(0);
        end if;
    end process;

    
    tmp_2030_fu_633_p4_proc : process(tmp_2029_fu_615_p4, zext_ln159_16_fu_629_p1, conv2_pooled_3_q2)
    begin
        tmp_2030_fu_633_p4 <= tmp_2029_fu_615_p4;
        if to_integer(unsigned(zext_ln159_16_fu_629_p1)) >= tmp_2029_fu_615_p4'low and to_integer(unsigned(zext_ln159_16_fu_629_p1)) <= tmp_2029_fu_615_p4'high then
            tmp_2030_fu_633_p4(to_integer(unsigned(zext_ln159_16_fu_629_p1))) <= conv2_pooled_3_q2(0);
        end if;
    end process;

    
    tmp_2031_fu_651_p4_proc : process(tmp_2030_fu_633_p4, zext_ln159_17_fu_647_p1, conv2_pooled_3_q1)
    begin
        tmp_2031_fu_651_p4 <= tmp_2030_fu_633_p4;
        if to_integer(unsigned(zext_ln159_17_fu_647_p1)) >= tmp_2030_fu_633_p4'low and to_integer(unsigned(zext_ln159_17_fu_647_p1)) <= tmp_2030_fu_633_p4'high then
            tmp_2031_fu_651_p4(to_integer(unsigned(zext_ln159_17_fu_647_p1))) <= conv2_pooled_3_q1(0);
        end if;
    end process;

    
    tmp_2032_fu_669_p4_proc : process(tmp_2031_fu_651_p4, zext_ln159_18_fu_665_p1, conv2_pooled_3_q0)
    begin
        tmp_2032_fu_669_p4 <= tmp_2031_fu_651_p4;
        if to_integer(unsigned(zext_ln159_18_fu_665_p1)) >= tmp_2031_fu_651_p4'low and to_integer(unsigned(zext_ln159_18_fu_665_p1)) <= tmp_2031_fu_651_p4'high then
            tmp_2032_fu_669_p4(to_integer(unsigned(zext_ln159_18_fu_665_p1))) <= conv2_pooled_3_q0(0);
        end if;
    end process;

    
    tmp_fu_380_p4_proc : process(reshaped_fu_74, zext_ln154_fu_371_p1, conv2_pooled_q3)
    begin
        tmp_fu_380_p4 <= reshaped_fu_74;
        if to_integer(unsigned(zext_ln154_fu_371_p1)) >= reshaped_fu_74'low and to_integer(unsigned(zext_ln154_fu_371_p1)) <= reshaped_fu_74'high then
            tmp_fu_380_p4(to_integer(unsigned(zext_ln154_fu_371_p1))) <= conv2_pooled_q3(0);
        end if;
    end process;

    tmp_s_fu_305_p3 <= (trunc_ln154_fu_289_p1 & ap_const_lv2_0);
    trunc_ln154_fu_289_p1 <= ap_sig_allocacmp_c(5 - 1 downto 0);
    xor_ln158_fu_390_p2 <= (c_reg_702 xor ap_const_lv6_20);
    zext_ln154_1_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_702),9));
    zext_ln154_2_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_702),8));
    zext_ln154_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_reg_702),64));
    zext_ln159_10_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln158_2_fu_587_p2),64));
    zext_ln159_11_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_1_fu_489_p1),64));
    zext_ln159_12_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_2_fu_507_p1),64));
    zext_ln159_13_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln159_7_cast_fu_525_p3),64));
    zext_ln159_14_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln159_9_cast_fu_566_p3),64));
    zext_ln159_15_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_3_fu_607_p1),64));
    zext_ln159_16_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_4_fu_625_p1),64));
    zext_ln159_17_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_5_fu_643_p1),64));
    zext_ln159_18_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_6_fu_661_p1),64));
    zext_ln159_1_cast_fu_409_p3 <= (ap_const_lv1_1 & c_reg_702);
    zext_ln159_1_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_305_p3),64));
    zext_ln159_2_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln159_fu_321_p2),64));
    zext_ln159_3_cast_fu_448_p3 <= (ap_const_lv2_2 & c_reg_702);
    zext_ln159_3_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln159_1_fu_335_p2),64));
    zext_ln159_4_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln158_fu_469_p2),64));
    zext_ln159_5_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln159_2_fu_349_p2),64));
    zext_ln159_6_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln159_1_cast_fu_409_p3),64));
    zext_ln159_7_cast_fu_525_p3 <= (ap_const_lv3_4 & c_reg_702);
    zext_ln159_7_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln159_fu_430_p1),64));
    zext_ln159_8_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln158_1_fu_546_p2),64));
    zext_ln159_9_cast_fu_566_p3 <= (ap_const_lv3_5 & c_reg_702);
    zext_ln159_9_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln159_3_cast_fu_448_p3),64));
    zext_ln159_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln158_fu_390_p2),64));
end behav;
