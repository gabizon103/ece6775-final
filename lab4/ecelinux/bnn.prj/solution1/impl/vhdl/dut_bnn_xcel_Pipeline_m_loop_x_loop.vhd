-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_bnn_xcel_Pipeline_m_loop_x_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv2_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_0_ce0 : OUT STD_LOGIC;
    conv2_0_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_2_ce0 : OUT STD_LOGIC;
    conv2_0_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_4_ce0 : OUT STD_LOGIC;
    conv2_0_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_6_ce0 : OUT STD_LOGIC;
    conv2_0_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_0_ce0 : OUT STD_LOGIC;
    conv2_1_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_2_ce0 : OUT STD_LOGIC;
    conv2_1_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_4_ce0 : OUT STD_LOGIC;
    conv2_1_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_6_ce0 : OUT STD_LOGIC;
    conv2_1_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_1_ce0 : OUT STD_LOGIC;
    conv2_0_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_3_ce0 : OUT STD_LOGIC;
    conv2_0_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_5_ce0 : OUT STD_LOGIC;
    conv2_0_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_0_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_0_7_ce0 : OUT STD_LOGIC;
    conv2_0_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_1_ce0 : OUT STD_LOGIC;
    conv2_1_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_3_ce0 : OUT STD_LOGIC;
    conv2_1_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_5_ce0 : OUT STD_LOGIC;
    conv2_1_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_1_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_1_7_ce0 : OUT STD_LOGIC;
    conv2_1_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_0_ce0 : OUT STD_LOGIC;
    conv2_2_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_2_ce0 : OUT STD_LOGIC;
    conv2_2_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_4_ce0 : OUT STD_LOGIC;
    conv2_2_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_6_ce0 : OUT STD_LOGIC;
    conv2_2_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_0_ce0 : OUT STD_LOGIC;
    conv2_3_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_2_ce0 : OUT STD_LOGIC;
    conv2_3_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_4_ce0 : OUT STD_LOGIC;
    conv2_3_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_6_ce0 : OUT STD_LOGIC;
    conv2_3_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_1_ce0 : OUT STD_LOGIC;
    conv2_2_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_3_ce0 : OUT STD_LOGIC;
    conv2_2_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_5_ce0 : OUT STD_LOGIC;
    conv2_2_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_2_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_2_7_ce0 : OUT STD_LOGIC;
    conv2_2_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_1_ce0 : OUT STD_LOGIC;
    conv2_3_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_3_ce0 : OUT STD_LOGIC;
    conv2_3_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_5_ce0 : OUT STD_LOGIC;
    conv2_3_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_3_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_3_7_ce0 : OUT STD_LOGIC;
    conv2_3_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_0_ce0 : OUT STD_LOGIC;
    conv2_4_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_2_ce0 : OUT STD_LOGIC;
    conv2_4_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_4_ce0 : OUT STD_LOGIC;
    conv2_4_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_6_ce0 : OUT STD_LOGIC;
    conv2_4_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_0_ce0 : OUT STD_LOGIC;
    conv2_5_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_2_ce0 : OUT STD_LOGIC;
    conv2_5_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_4_ce0 : OUT STD_LOGIC;
    conv2_5_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_6_ce0 : OUT STD_LOGIC;
    conv2_5_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_1_ce0 : OUT STD_LOGIC;
    conv2_4_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_3_ce0 : OUT STD_LOGIC;
    conv2_4_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_5_ce0 : OUT STD_LOGIC;
    conv2_4_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_4_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_4_7_ce0 : OUT STD_LOGIC;
    conv2_4_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_1_ce0 : OUT STD_LOGIC;
    conv2_5_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_3_ce0 : OUT STD_LOGIC;
    conv2_5_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_5_ce0 : OUT STD_LOGIC;
    conv2_5_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_5_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_5_7_ce0 : OUT STD_LOGIC;
    conv2_5_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_0_ce0 : OUT STD_LOGIC;
    conv2_6_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_2_ce0 : OUT STD_LOGIC;
    conv2_6_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_4_ce0 : OUT STD_LOGIC;
    conv2_6_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_6_ce0 : OUT STD_LOGIC;
    conv2_6_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_0_ce0 : OUT STD_LOGIC;
    conv2_7_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_2_ce0 : OUT STD_LOGIC;
    conv2_7_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_4_ce0 : OUT STD_LOGIC;
    conv2_7_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_6_ce0 : OUT STD_LOGIC;
    conv2_7_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_1_ce0 : OUT STD_LOGIC;
    conv2_6_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_3_ce0 : OUT STD_LOGIC;
    conv2_6_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_5_ce0 : OUT STD_LOGIC;
    conv2_6_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_6_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_6_7_ce0 : OUT STD_LOGIC;
    conv2_6_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_1_ce0 : OUT STD_LOGIC;
    conv2_7_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_3_ce0 : OUT STD_LOGIC;
    conv2_7_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_5_ce0 : OUT STD_LOGIC;
    conv2_7_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_7_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_7_7_ce0 : OUT STD_LOGIC;
    conv2_7_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_ce0 : OUT STD_LOGIC;
    conv2_pooled_we0 : OUT STD_LOGIC;
    conv2_pooled_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_1_ce0 : OUT STD_LOGIC;
    conv2_pooled_1_we0 : OUT STD_LOGIC;
    conv2_pooled_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_2_ce0 : OUT STD_LOGIC;
    conv2_pooled_2_we0 : OUT STD_LOGIC;
    conv2_pooled_2_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    conv2_pooled_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv2_pooled_3_ce0 : OUT STD_LOGIC;
    conv2_pooled_3_we0 : OUT STD_LOGIC;
    conv2_pooled_3_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dut_bnn_xcel_Pipeline_m_loop_x_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln130_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal select_ln130_fu_1126_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln130_reg_1700 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln141_fu_1142_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln141_reg_1706 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln130_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln141_1_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_182 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln131_fu_1230_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_load : STD_LOGIC_VECTOR (2 downto 0);
    signal m_1_fu_186 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln130_2_fu_1134_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_allocacmp_m_1_load : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten77_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln130_2_fu_1102_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten77_load : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln131_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln130_fu_1114_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln130_fu_1146_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln130_1_fu_1150_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln130_4_fu_1154_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_1251_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln141_fu_1258_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln141_fu_1261_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_35_fu_1275_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_58_fu_1300_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_fu_1280_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1320_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1340_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_24_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1399_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_17_fu_1379_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1419_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1439_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_27_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_26_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1498_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_19_fu_1478_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_1518_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1538_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_30_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_29_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1597_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_21_fu_1577_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_1617_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1637_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_33_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_32_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_mux_73_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_73_1_1_1_U384 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_0_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_0_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_0_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_0_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => max_fu_1280_p9);

    mux_73_1_1_1_U385 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_1_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_1_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_1_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_1_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_58_fu_1300_p9);

    mux_73_1_1_1_U386 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_0_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_0_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_0_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_0_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_59_fu_1320_p9);

    mux_73_1_1_1_U387 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_1_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_1_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_1_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_1_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_60_fu_1340_p9);

    mux_73_1_1_1_U388 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_2_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_2_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_2_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_2_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => max_17_fu_1379_p9);

    mux_73_1_1_1_U389 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_3_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_3_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_3_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_3_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_61_fu_1399_p9);

    mux_73_1_1_1_U390 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_2_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_2_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_2_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_2_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_62_fu_1419_p9);

    mux_73_1_1_1_U391 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_3_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_3_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_3_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_3_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_63_fu_1439_p9);

    mux_73_1_1_1_U392 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_4_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_4_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_4_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_4_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => max_19_fu_1478_p9);

    mux_73_1_1_1_U393 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_5_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_5_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_5_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_5_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_64_fu_1498_p9);

    mux_73_1_1_1_U394 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_4_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_4_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_4_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_4_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_65_fu_1518_p9);

    mux_73_1_1_1_U395 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_5_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_5_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_5_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_5_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_66_fu_1538_p9);

    mux_73_1_1_1_U396 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_6_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_6_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_6_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_6_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => max_21_fu_1577_p9);

    mux_73_1_1_1_U397 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_7_0_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_7_2_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_7_4_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_7_6_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_67_fu_1597_p9);

    mux_73_1_1_1_U398 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_6_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_6_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_6_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_6_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_68_fu_1617_p9);

    mux_73_1_1_1_U399 : component dut_mux_73_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => conv2_7_1_q0,
        din1 => ap_const_lv1_0,
        din2 => conv2_7_3_q0,
        din3 => ap_const_lv1_0,
        din4 => conv2_7_5_q0,
        din5 => ap_const_lv1_0,
        din6 => conv2_7_7_q0,
        din7 => empty_35_fu_1275_p2,
        dout => tmp_69_fu_1637_p9);

    flow_control_loop_pipe_sequential_init_U : component dut_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten77_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln130_fu_1096_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten77_fu_190 <= add_ln130_2_fu_1102_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten77_fu_190 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    m_1_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln130_fu_1096_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    m_1_fu_186 <= select_ln130_2_fu_1134_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    m_1_fu_186 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;

    x_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln130_fu_1096_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_182 <= add_ln131_fu_1230_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_182 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln130_fu_1096_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln130_reg_1700 <= select_ln130_fu_1126_p3;
                trunc_ln141_reg_1706 <= trunc_ln141_fu_1142_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln130_2_fu_1102_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten77_load) + unsigned(ap_const_lv8_1));
    add_ln130_fu_1114_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_m_1_load) + unsigned(ap_const_lv6_1));
    add_ln131_fu_1230_p2 <= std_logic_vector(unsigned(select_ln130_fu_1126_p3) + unsigned(ap_const_lv3_1));
    add_ln141_fu_1261_p2 <= std_logic_vector(unsigned(tmp_s_fu_1251_p3) + unsigned(zext_ln141_fu_1258_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln130_fu_1096_p2)
    begin
        if (((icmp_ln130_fu_1096_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten77_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten77_fu_190)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten77_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten77_load <= indvar_flatten77_fu_190;
        end if; 
    end process;


    ap_sig_allocacmp_m_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, m_1_fu_186)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_m_1_load <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_m_1_load <= m_1_fu_186;
        end if; 
    end process;


    ap_sig_allocacmp_x_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_182, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_x_load <= x_fu_182;
        end if; 
    end process;

    conv2_0_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_0_ce0 <= ap_const_logic_1;
        else 
            conv2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_1_ce0 <= ap_const_logic_1;
        else 
            conv2_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_2_ce0 <= ap_const_logic_1;
        else 
            conv2_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_3_ce0 <= ap_const_logic_1;
        else 
            conv2_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_4_ce0 <= ap_const_logic_1;
        else 
            conv2_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_5_ce0 <= ap_const_logic_1;
        else 
            conv2_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_6_ce0 <= ap_const_logic_1;
        else 
            conv2_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_0_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_0_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_0_7_ce0 <= ap_const_logic_1;
        else 
            conv2_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_0_ce0 <= ap_const_logic_1;
        else 
            conv2_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_1_ce0 <= ap_const_logic_1;
        else 
            conv2_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_2_ce0 <= ap_const_logic_1;
        else 
            conv2_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_3_ce0 <= ap_const_logic_1;
        else 
            conv2_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_4_ce0 <= ap_const_logic_1;
        else 
            conv2_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_5_ce0 <= ap_const_logic_1;
        else 
            conv2_1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_6_ce0 <= ap_const_logic_1;
        else 
            conv2_1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_1_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_1_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_1_7_ce0 <= ap_const_logic_1;
        else 
            conv2_1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_0_ce0 <= ap_const_logic_1;
        else 
            conv2_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_1_ce0 <= ap_const_logic_1;
        else 
            conv2_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_2_ce0 <= ap_const_logic_1;
        else 
            conv2_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_3_ce0 <= ap_const_logic_1;
        else 
            conv2_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_4_ce0 <= ap_const_logic_1;
        else 
            conv2_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_5_ce0 <= ap_const_logic_1;
        else 
            conv2_2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_6_ce0 <= ap_const_logic_1;
        else 
            conv2_2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_2_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_2_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_2_7_ce0 <= ap_const_logic_1;
        else 
            conv2_2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_0_ce0 <= ap_const_logic_1;
        else 
            conv2_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_1_ce0 <= ap_const_logic_1;
        else 
            conv2_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_2_ce0 <= ap_const_logic_1;
        else 
            conv2_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_3_ce0 <= ap_const_logic_1;
        else 
            conv2_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_4_ce0 <= ap_const_logic_1;
        else 
            conv2_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_5_ce0 <= ap_const_logic_1;
        else 
            conv2_3_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_6_ce0 <= ap_const_logic_1;
        else 
            conv2_3_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_3_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_3_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_3_7_ce0 <= ap_const_logic_1;
        else 
            conv2_3_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_0_ce0 <= ap_const_logic_1;
        else 
            conv2_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_1_ce0 <= ap_const_logic_1;
        else 
            conv2_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_2_ce0 <= ap_const_logic_1;
        else 
            conv2_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_3_ce0 <= ap_const_logic_1;
        else 
            conv2_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_4_ce0 <= ap_const_logic_1;
        else 
            conv2_4_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_5_ce0 <= ap_const_logic_1;
        else 
            conv2_4_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_6_ce0 <= ap_const_logic_1;
        else 
            conv2_4_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_4_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_4_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_4_7_ce0 <= ap_const_logic_1;
        else 
            conv2_4_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_0_ce0 <= ap_const_logic_1;
        else 
            conv2_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_1_ce0 <= ap_const_logic_1;
        else 
            conv2_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_2_ce0 <= ap_const_logic_1;
        else 
            conv2_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_3_ce0 <= ap_const_logic_1;
        else 
            conv2_5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_4_ce0 <= ap_const_logic_1;
        else 
            conv2_5_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_5_ce0 <= ap_const_logic_1;
        else 
            conv2_5_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_6_ce0 <= ap_const_logic_1;
        else 
            conv2_5_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_5_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_5_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_5_7_ce0 <= ap_const_logic_1;
        else 
            conv2_5_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_0_ce0 <= ap_const_logic_1;
        else 
            conv2_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_1_ce0 <= ap_const_logic_1;
        else 
            conv2_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_2_ce0 <= ap_const_logic_1;
        else 
            conv2_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_3_ce0 <= ap_const_logic_1;
        else 
            conv2_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_4_ce0 <= ap_const_logic_1;
        else 
            conv2_6_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_5_ce0 <= ap_const_logic_1;
        else 
            conv2_6_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_6_ce0 <= ap_const_logic_1;
        else 
            conv2_6_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_6_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_6_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_6_7_ce0 <= ap_const_logic_1;
        else 
            conv2_6_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_0_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_0_ce0 <= ap_const_logic_1;
        else 
            conv2_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_1_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_1_ce0 <= ap_const_logic_1;
        else 
            conv2_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_2_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_2_ce0 <= ap_const_logic_1;
        else 
            conv2_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_3_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_3_ce0 <= ap_const_logic_1;
        else 
            conv2_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_4_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_4_ce0 <= ap_const_logic_1;
        else 
            conv2_7_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_5_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_5_ce0 <= ap_const_logic_1;
        else 
            conv2_7_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_6_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_6_ce0 <= ap_const_logic_1;
        else 
            conv2_7_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_7_7_address0 <= zext_ln130_fu_1162_p1(5 - 1 downto 0);

    conv2_7_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_7_7_ce0 <= ap_const_logic_1;
        else 
            conv2_7_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_1_address0 <= zext_ln141_1_fu_1267_p1(7 - 1 downto 0);

    conv2_pooled_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_1_d0 <= (or_ln137_27_fu_1465_p2 or or_ln137_26_fu_1459_p2);

    conv2_pooled_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_1_we0 <= ap_const_logic_1;
        else 
            conv2_pooled_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_2_address0 <= zext_ln141_1_fu_1267_p1(7 - 1 downto 0);

    conv2_pooled_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_2_d0 <= (or_ln137_30_fu_1564_p2 or or_ln137_29_fu_1558_p2);

    conv2_pooled_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_2_we0 <= ap_const_logic_1;
        else 
            conv2_pooled_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_3_address0 <= zext_ln141_1_fu_1267_p1(7 - 1 downto 0);

    conv2_pooled_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_3_d0 <= (or_ln137_33_fu_1663_p2 or or_ln137_32_fu_1657_p2);

    conv2_pooled_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_3_we0 <= ap_const_logic_1;
        else 
            conv2_pooled_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_address0 <= zext_ln141_1_fu_1267_p1(7 - 1 downto 0);

    conv2_pooled_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_ce0 <= ap_const_logic_1;
        else 
            conv2_pooled_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_pooled_d0 <= (or_ln137_fu_1360_p2 or or_ln137_24_fu_1366_p2);

    conv2_pooled_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv2_pooled_we0 <= ap_const_logic_1;
        else 
            conv2_pooled_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_35_fu_1275_p2 <= std_logic_vector(shift_left(unsigned(select_ln130_reg_1700),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    icmp_ln130_fu_1096_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten77_load = ap_const_lv8_80) else "0";
    icmp_ln131_fu_1120_p2 <= "1" when (ap_sig_allocacmp_x_load = ap_const_lv3_4) else "0";
    or_ln137_24_fu_1366_p2 <= (tmp_60_fu_1340_p9 or tmp_59_fu_1320_p9);
    or_ln137_26_fu_1459_p2 <= (tmp_61_fu_1399_p9 or max_17_fu_1379_p9);
    or_ln137_27_fu_1465_p2 <= (tmp_63_fu_1439_p9 or tmp_62_fu_1419_p9);
    or_ln137_29_fu_1558_p2 <= (tmp_64_fu_1498_p9 or max_19_fu_1478_p9);
    or_ln137_30_fu_1564_p2 <= (tmp_66_fu_1538_p9 or tmp_65_fu_1518_p9);
    or_ln137_32_fu_1657_p2 <= (tmp_67_fu_1597_p9 or max_21_fu_1577_p9);
    or_ln137_33_fu_1663_p2 <= (tmp_69_fu_1637_p9 or tmp_68_fu_1617_p9);
    or_ln137_fu_1360_p2 <= (tmp_58_fu_1300_p9 or max_fu_1280_p9);
    select_ln130_2_fu_1134_p3 <= 
        add_ln130_fu_1114_p2 when (icmp_ln131_fu_1120_p2(0) = '1') else 
        ap_sig_allocacmp_m_1_load;
    select_ln130_4_fu_1154_p3 <= 
        trunc_ln130_fu_1146_p1 when (icmp_ln131_fu_1120_p2(0) = '1') else 
        trunc_ln130_1_fu_1150_p1;
    select_ln130_fu_1126_p3 <= 
        ap_const_lv3_0 when (icmp_ln131_fu_1120_p2(0) = '1') else 
        ap_sig_allocacmp_x_load;
    tmp_s_fu_1251_p3 <= (trunc_ln141_reg_1706 & ap_const_lv2_0);
    trunc_ln130_1_fu_1150_p1 <= ap_sig_allocacmp_m_1_load(5 - 1 downto 0);
    trunc_ln130_fu_1146_p1 <= add_ln130_fu_1114_p2(5 - 1 downto 0);
    trunc_ln141_fu_1142_p1 <= select_ln130_2_fu_1134_p3(5 - 1 downto 0);
    zext_ln130_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln130_4_fu_1154_p3),64));
    zext_ln141_1_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln141_fu_1261_p2),64));
    zext_ln141_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln130_reg_1700),7));
end behav;
